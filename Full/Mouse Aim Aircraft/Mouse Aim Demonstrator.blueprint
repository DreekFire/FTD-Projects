{"FileModelVersion":{"Major":1,"Minor":0},"Name":"Mouse Aim Demonstrator","Version":27,"SavedTotalBlockCount":441,"SavedMaterialCost":22217.2012,"ContainedMaterialCost":360.258545,"ItemDictionary":{"1776":"91f61454-6e53-4df0-9ced-e4d86a98ab88","1772":"bdf96eb8-6d43-4b2e-8610-68952484ca04","1187":"9411e401-27da-4546-b805-3334f200f055","1220":"b2ca635d-350c-4977-b8d4-2b2dd28cd2d7","1224":"8aceae65-2dce-44b7-94b1-b4bd34d287a5","1196":"a3ea61a8-018c-4277-afd9-ac0a34faa759","1201":"8c2aaf82-442e-46a7-9ea5-1b7862cacb87","1204":"2cdbdb66-132e-4202-90c6-e0a2d8022cc6","1221":"a6cfd078-bc39-4ad8-a47f-49097913a27b","1197":"2a3905ff-2030-421d-a2bf-90fba71c1c5e","1181":"fdba2b5d-3570-43fb-a9e1-10a0c0bba0ef","1282":"729b7ea3-59d5-4182-9177-684da6fbe0a9","1306":"787524d3-1b60-44d8-bef2-d42156c55446","829":"2d519ca8-1f12-4a8e-9340-aa6648b5e799","1277":"174b5b41-b70e-485d-b00a-a61cc9826b2c","1180":"54b18bde-2698-4840-a2aa-a37efba89ff4","1283":"e42929f1-ccd0-4fff-8413-6cb94cf08405","1302":"0375d846-a203-4813-a330-0d8fd1e6586e","1225":"2b1b3011-0b81-472e-aa42-26383f453268","1774":"80a0edf3-97c0-4bf6-bfc3-80dc68525080","1773":"020fae5d-c759-4456-87e6-7e423752a427","1769":"a6ad7eaa-e826-42d5-b4f5-7358a842623f","1770":"f5e7ac10-3c0c-4999-8287-07245ee81062","1192":"9af822b3-80d9-46bd-9ce0-e6e5c2e61da4","1193":"b5d46bb7-d49e-42f6-817b-323fbf6d62b0","1186":"649f2aec-6f59-4157-ac01-0122ce2e6dad","1172":"77b5b1be-56a8-4699-b9fb-a967a03897c5","1173":"903ed616-47a5-4aa2-a85c-f3e18ce9e620","1195":"c6176cb5-0a32-4d68-a749-8ee33b2230c1","833":"3cc75979-18ac-46c4-9a5b-25b327d99410","1202":"ba5c8d03-9093-47a9-a8cd-b721ceeee1dd","1205":"afb33fc2-3071-408a-b312-da22478c0a14","652":"c743b888-a53c-42b8-b4f0-3afc6d763617","648":"b1ef236a-9ecb-406c-b4f0-6ef0fbb50bd1","622":"310a7a9a-8d4e-4365-a877-1a8e2bac2a81","129":"d4e23d98-fbde-449e-823f-872004cadc7a","1544":"a7f5d8de-4882-4111-9d01-436493e5b2d8","1779":"9e02bc1c-fddd-47b8-9cd8-3b6dc335e409","130":"478efa9f-5743-4238-ad2e-750770d7da11","1184":"3a0be065-8983-46ea-8a1f-099ff9d544c7","1182":"a7e535a6-e684-4afc-b354-b2470094b014","1095":"e62413c3-e841-4eda-9e2a-ceaec75e8b64","1217":"7530d72e-1b5b-408c-9abc-59957a90970f","1213":"1e5247be-25c1-45bc-92a6-e2ab1bfaaa8c","1185":"8f9dbf41-6c2d-4e7b-855d-b2432c6942a2","1211":"272f0dea-8aac-4ca9-98e6-79897e7df0f9","1215":"29c40e04-59fb-45dc-a80b-31ee1c4f82ac","767":"a3d914e9-697d-425f-abda-a6b21b4de952","971":"85ea264e-6ef0-48df-9adc-9b1a8fe15247","1771":"c855c2f8-716b-44ba-901f-2dbfb4bf1612","1775":"47f51fca-7668-45b9-8201-51541110833e","1543":"46f54639-5f91-4731-93eb-e5c0a7460538","834":"ab699540-efc8-4592-bc97-204f6a874b3a","391":"56c27d46-39b3-4ac1-b4f7-71c118d8dde9","419":"5d8870cd-d401-4b52-a3dc-641c02b3b31f","1227":"efb3284f-bedc-453f-9519-043f77f2e85d","969":"2eca89e0-5c2f-4b1c-a5bf-df5190e13ef4","791":"bf0db0d2-8582-41d2-bcfe-5299bec3d06b","749":"61c56906-c2ae-4953-8fef-2e18e5ff7a68","945":"819dea06-da54-4236-a041-7346e3dad3d2","944":"e8c5c921-b116-45cd-b0de-7a37973d5158","1163":"ccb16d68-186c-4896-82e3-9e9213271ace","1162":"20f74da8-3052-4e5a-8b9a-28252781f37b","621":"154e5001-729c-4a9f-983b-342d3092a0f3","663":"26b0f142-9419-41f1-9c13-3a2b62437f60","1160":"ab8dda56-4b5e-47cf-886c-219a0259018b","1161":"6df35bc7-4799-43bc-9f49-782e1e9a53a4","973":"f62c34b8-727e-4f6d-8d75-97c52631b7f9","670":"d30acc39-3742-47bd-82de-f5e1b9af565d","1554":"db9ed060-d556-435b-945c-19c923e233d3","1537":"a2983545-008e-4926-a54a-89cc56de8f48","1538":"5a0d6e26-7939-437f-ba35-33d9b3cf193f","1361":"49714981-369a-4158-aff6-e562ee5f98d5","1360":"242e07fa-399f-4caa-bfc2-1b77bd2bd538","964":"5dc0032d-d532-4766-b081-4204947bcaa0","968":"9083c801-30fd-4c67-b571-b67aeb48ec88","1166":"44b7168c-4c2b-4875-a1b5-f77029cf4658","1167":"cc10dea1-469d-4574-b672-61c786284cf0","1130":"242be860-8b25-4bdc-91fd-c1fecba9a7f1","785":"d3924bae-be5a-43a0-be19-64fc7c8d6059","747":"8d948200-242c-47c3-b46a-ecdf40f7b39b","397":"c8fe583a-357b-4fa6-86f1-fc2de639c909","804":"9a564782-3a07-472b-ae06-5a7dfd123e7d","275":"76fb5718-e965-46ab-9f0c-c82baf648abf","287":"33d7dc96-ff04-4178-8f67-9c380d26f168","623":"86a6eb4b-cb64-4451-9dc5-94efff6b8ed6","150":"efb55635-4841-42b3-98f0-9aed90b2e826","153":"d9a36701-b452-4364-a2f0-cc822af38cd0","273":"811379b2-2e27-4268-b821-940766960802","285":"0639fbba-70be-4398-857c-6786dab39bea","780":"5b609887-c1dd-407b-b3b6-b1eb35d1e818","1140":"1dc0c474-f547-4570-85ed-6dc2f7ab33dd","336":"26a604f0-071c-49ca-8a0e-e1d9c959b1c5","813":"2ed46940-a47c-4283-bf5d-6b52132da9b4","335":"f29b1372-f4f3-4305-aa85-5fe214361fb7","346":"0d1d97b5-3c99-45bf-8a5d-e7a624b3ddb6","362":"1bb2d71d-cd5f-4a23-844b-8005dec7bd5c","1319":"62568fd8-bb60-4e86-8ad7-3bd91d8dde58","691":"e63040c9-0027-4fd3-be30-67fe3e950140","679":"cdca5dec-eeee-4849-9b2e-73b23e216465","112":"c7d3ffb8-3ceb-40ae-a2b0-69c1f4d59462","107":"cacc9c8b-9149-4adf-a86c-5cf5f4b035b8","105":"26a852c0-da52-4232-8e04-69913c8edc13","114":"2b2d4fdc-8ffa-4399-985a-f9f5ec1263d0","121":"95e34566-9234-4559-b601-9a0b9b7c11e5","678":"788700be-1e74-46d7-9e34-1a5ec2747548","81":"b50989c9-03d4-4201-a8d4-459dcea86b05","37":"275b820d-dd55-49aa-9b09-48b58e8ab5da","689":"c5cec892-2e43-4905-9d28-44fc8ecb5cc7","690":"213026bc-fd7a-44e6-b543-a31c219aaef0","140":"dc8f69fe-f97c-404f-996c-1b934afa17b5","168":"011e4de9-c66c-4ce6-ad22-2fd6ac9df2a6","178":"703d6094-850b-45fc-a01c-25ceddd49dcb","169":"00b9dfc4-ac8f-4fee-bbe0-a76aeeb75627","211":"375f4305-47bc-4abd-8c68-b67cb50e7036","156":"0a1aa046-e841-4813-907e-6567e596a079","193":"faa18ecd-0edf-4167-8c30-8cf2b95f42e1","177":"52ff74a3-3d0f-4b2f-bfe3-23ff12f74354","176":"8a96edf6-93c3-47c2-b3ad-894598f262e3","174":"ac65ce78-2e21-465e-a28b-07ebbd65805e","170":"9e8fd38f-a406-4d87-8186-de37979d4d20","200":"575c59bf-c5be-4558-8ab7-7bb672f62ffb","1551":"5548037e-8428-43f8-bcb6-d730dbcd0a79","681":"2e86af10-00e0-4dad-9cac-3b87ca9e468d","682":"d83e6a25-e6c3-49df-9d0b-de3c5edb579b","779":"2e715d3f-349f-41e1-bd89-7f685939d5aa","366":"1725c9ed-29fd-438d-97f6-8f645a1865d4"},"Blueprint":{"ContainedMaterialCost":274.0,"CSI":[0.0,3.0,-1.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2999.949934,8.063576,1.0,1.0,0.0,1.0,111.406303,611.898621,-1.0,0.0,3000.0,1.0,1.0,135000.0,0.0,7.731443,0.0,98.339508,20.0,0.1,0.1,1.0,1.0,3.0,-1.0,0.0,-1.0,0.0,-1.0,1.0,0.332132,-1.0,0.0,0.0,240.0,0.0,135000.0,0.0,120.0,-1.0,592.620056,237.117004,0.5,0.0,0.0,500.0,0.0,12.0,0.0,0.0,0.0,7.659347,0.0,0.0,0.0,0.0,0.083233,0.0,0.0,0.0,0.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0],"COL":["0.011764,0,0,0","1,0,0,0.5","0,1,0,0.5","0,0,1,0.5","0.1,0.1,0.1,0.5","0.3,0.3,0.3,0.5","0.5,0.5,0.5,0.5","1,1,1,0.1","1,1,1,0.5","1,1,1,0.99","1,0.921568,0.015686,0.99","0,1,1,0.99","1,0,1,0.99","0.30953,0.354535,0.054567,0.79008","0.401338,0.105022,0.462265,0.525019","0.462913,0.384848,0.593004,0.109731","0.682188,0.501784,0.131505,0.435385","0.321303,0.056916,0.360682,0.701864","0.574693,0.728586,0.918618,0.704478","0.43819,0.803103,0.907887,0.395644","0.83117,0.757529,0.666652,0.175828","0.675463,0.723664,0.339566,0.175991","0.582383,0.087971,0.310647,0.572633","0.212136,0.404522,0.770106,0.345874","0.874481,0.01694,0.45307,0.032828","0.127557,0.093725,0.115743,0.902709","0.639143,0.418663,0.191647,0.574554","0,0,0,0","0.345098,0.3,0.8,0.6","0.015686,1,1,0.989999","0.984313,1,1,1","0,0,0,1"],"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","1,0,0","2,0,0","1,0,1","2,0,1","2,0,-2","2,0,-3","2,0,-4","2,0,2","1,0,2","1,0,-2","1,0,-3","1,0,-4","1,0,-1","2,0,-1","0,0,-2","0,0,-3","0,0,-4","3,0,-4","4,0,-5","3,0,-3","4,0,-4","4,0,-3","3,0,-2"],"BLR":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,0,0,0,0],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAAA4AAgAAAAAAAAMAAAAABwABAAAAAAcAJIgAAAAHAF0AAAAABwBdGwEAAAcAZAAEAACgwQAABDcAAAABAAAjAAAAIwCJAAAAAAAA7GIAAAAAAIZ7AAAABwBdAAAAABwAXRsBAAAcAAIABAAAcEEBAATNzMw+BAAEAACAPwcABAAAgD8AAAQ4AAAAAgAAIwAAACMAiQAAAAAAAOxiAAAAAACGewAAAAcAXQAAAAAcAF0bAQAAHAACAAQAAHBBAQAEzczMPgQABAAAgD8HAAQAAIA/AAAEOQAAAA8AAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxAAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxEAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxIAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxMAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxQAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxUAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxYAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvxcAAA4AAAAHAAAAAAAAAABdGwEAAAcAAAAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"TEMP","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"-3,1,12","LocalRotation":"0,0,-0.999999,0","ForceId":0,"TotalBlockCount":24,"MaxCords":"4,0,2","MinCords":"0,0,-5","BlockIds":[679,112,112,107,107,105,105,114,121,121,105,105,114,107,107,130,130,130,130,130,130,130,130,130],"BlockState":"=0,24","AliveCount":24,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":38,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":24},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,0","-2,0,1","-1,0,1","-2,0,-1","-2,0,-2","-1,0,-2","-2,0,-3","-2,0,2","-2,0,-4","-1,0,2","-1,0,-3","-1,0,-4","-1,0,-1","0,0,-2","0,0,-3","-3,0,-4","-4,0,-5","0,0,-4","-3,0,-3","-4,0,-4","-3,0,-2","-4,0,-3"],"BLR":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,0,0,0,0],"BP1":null,"BP2":null,"BCI":[31,31,31,31,31,31,31,31,31,31,0,31,31,0,31,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAAA4AAgAAAAAAAAMAAAAABwABAAAAAAcAJIgAAAAHAF0AAAAABwBdGwEAAAcAZAAEAACgQQAABDQAAAABAAAjAAAAIwCJAAAAAAAA7GIAAAAAAIZ7AAAABwBdAAAAABwAXRsBAAAcAAIABAAAcMEBAATNzMy+BAAEAACAPwcABAAAgD8AAAQ1AAAAAgAAIwAAACoAiQAAAAAAAOxiAAAABwCGewAAAA4AXQAAAAAjAF0bAQAAIwAAAARymf8AAgAEAABwwQEABM3MzL4EAAQAAIA/BwAEAACAPwAABDYAAAAPAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8QAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8RAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8SAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8TAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8UAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8VAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8WAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8XAAAOAAAABwAAAAAAAAAAXRsBAAAHAAAABAAAgL8=","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"TEMP","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"3,1,12","LocalRotation":"0,0,-0.999999,0","ForceId":0,"TotalBlockCount":24,"MaxCords":"0,0,2","MinCords":"-4,0,-5","BlockIds":[679,112,112,107,107,107,105,105,105,121,114,121,105,114,107,130,130,130,130,130,130,130,130,130],"BlockState":"=0,24","AliveCount":24,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":39,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":24},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","0,0,-1"],"BLR":[0,0],"BP1":null,"BP2":null,"BCI":[0,0],"BEI":null,"BlockData":"AAAAKgAAABIAAgAAAAAAAAMAAAAAAAABAAAAAAcAJIgAAAALAF0AAAAACwBdGwEAAAsAZAAEAAAAPwkAAQEAAAQqAAAAAQAAKgAAABwAiQAAAAAAACSIAAAAAACGewAAAAAA7GIAAAAVAF0AAAAAFQBdGwEAABUAAAAEAACAQAQABAAAgD8HAAQAAIA/AAAExgAAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"TEMP","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"-9,1,8","LocalRotation":"0,0,0.707106,0.707106","ForceId":0,"TotalBlockCount":2,"MaxCords":"0,0,0","MinCords":"0,0,-1","BlockIds":[679,81],"BlockState":"00","AliveCount":2,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":40,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":2},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","0,0,-1"],"BLR":[0,0],"BP1":null,"BP2":null,"BCI":[0,0],"BEI":null,"BlockData":"AAAAKgAAABIAAgAAAAAAAAMAAAAAAAABAAAAAAcAJIgAAAALAF0AAAAACwBdGwEAAAsAZAAEAAAAPwkAAQEAAAQqAAAAAQAAKgAAABwAiQAAAAAAACSIAAAAAACGewAAAAAA7GIAAAAVAF0AAAAAFQBdGwEAABUAAAAEAACAQAQABAAAgD8HAAQAAIA/AAAExwAAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"TEMP","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"9,1,8","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":2,"MaxCords":"0,0,0","MinCords":"0,0,-1","BlockIds":[679,81],"BlockState":"00","AliveCount":2,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":41,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":2},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-3,0,-2","-2,0,-2","-2,0,-3","-3,0,-3","3,0,-2","2,0,-2","2,0,-3","3,0,-3","0,0,-5","0,0,-6","0,0,-1","1,0,-3","-1,0,-3","1,0,-2","-1,0,-2"],"BLR":[0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0],"BP1":null,"BP2":null,"BCI":[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31],"BEI":null,"BlockData":"AAAAKgAAAAcAAgAAAAAAAAMAAAAAAAABAAAAAAAAJIgAAAAAAF0AAAAAAABdGwEAAAAAAAAEngAAAAEAABUAAAAHAOYCAAAAAABdAAAAAAcAXRsBAAAHAAMABAAAgD8CAAAVAAAABwDmAgAAAAAAXQAAAAAHAF0bAQAABwADAAQAAIA/AwAAFQAAAAcA5gIAAAAAAF0AAAAABwBdGwEAAAcAAwAEAACAPwQAABUAAAAHAOYCAAAAAABdAAAAAAcAXRsBAAAHAAMABAAAgD8FAAAVAAAABwDmAgAAAAAAXQAAAAAHAF0bAQAABwADAAQAAIA/BgAAFQAAAAcA5gIAAAAAAF0AAAAABwBdGwEAAAcAAwAEAACAPwcAABUAAAAHAOYCAAAAAABdAAAAAAcAXRsBAAAHAAMABAAAgD8IAAAVAAAABwDmAgAAAAAAXQAAAAAHAF0bAQAABwADAAQAAIA/DAAAFQAAAAcA5gIAAAAAAF0AAAAABwBdGwEAAAcAAwAEAACAPw0AABUAAAAHAOYCAAAAAABdAAAAAAcAXRsBAAAHAAMABAAAgD8OAAAVAAAABwDmAgAAAAAAXQAAAAAHAF0bAQAABwADAAQAAIA/DwAAFQAAAAcA5gIAAAAAAF0AAAAABwBdGwEAAAcAAwAEAACAPw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"0,2,2","LocalRotation":"0,0,0,1","ForceId":0,"TotalBlockCount":16,"MaxCords":"3,0,0","MinCords":"-3,0,-6","BlockIds":[679,129,129,129,129,129,129,129,129,37,37,1187,129,129,129,129],"BlockState":"=0,16","AliveCount":16,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":45,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":16},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0"],"BLR":[0],"BP1":null,"BP2":null,"BCI":[31],"BEI":null,"BlockData":"AAAAKgAAACAAAwAAAAAAAAEAAAAAAAACAAAAAAAAdiYAAAAOAEIYAAAADgBdGwEAAA4AAAAEPwAAAAEABM3MzD0AAATkAAAAAQAIam95c3RpY2s=","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"Two Axis Turret","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":690,"LocalPosition":"0,0,18","LocalRotation":"0,0,0,1","ForceId":0,"TotalBlockCount":1,"MaxCords":"0,0,0","MinCords":"0,0,0","BlockIds":[689],"BlockState":"0","AliveCount":1,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":50,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":1},{"ContainedMaterialCost":43.12928,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-2,-1,4","-2,-1,5","0,0,1","0,0,2","0,1,1","0,1,2","0,-1,2","0,-1,1","1,-1,2","1,-1,1","-1,1,2","-1,1,1","1,1,2","1,1,1","-1,0,1","-1,-1,1","-1,-1,2","1,0,1","1,0,2","-1,0,2","-1,-1,3","1,0,3","-1,0,3","-2,1,3","-1,1,3","0,1,3","1,1,3","-2,-1,3","-2,0,3","-2,0,2","-2,-1,2","-2,0,1","-2,1,2","-1,0,4","0,0,3","0,1,4","0,0,4","-2,-1,9","0,0,5"],"BLR":[0,18,18,18,18,7,7,9,9,9,9,7,7,3,3,9,13,13,7,7,9,13,5,6,3,10,10,1,5,16,2,6,6,2,4,13,20,0,18,4],"BP1":null,"BP2":null,"BCI":[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0],"BEI":null,"BlockData":"AAAAKgAAAAcAAgAAAAAAAAMAAAAAAAABAAAAAAAAJIgAAAAAAF0AAAAAAABdGwEAAAAAAAAE9gAAAAEAADEAAABlAAAAAAAAAAAcAAAAABwAAQAAAAAcAAIAAAAAHAB2JgAAACoAQhgAAABGAF0bAQAAVAAAAASQwvU8AQAEAgAAAA0ABDNTCEQOAATNzMw9AAAEAwAAAAEABAAAAEAAAAQCAAAAAQAEzcxMPQIABM3MzD0DAATNzEw9AAAE8Mv7SAEABBcf8kUAAAQBAAAAAQAHY2Fubm9ucwUAABUAAAAOAN8fAAAAAAAcAAAAAAcAXRsBAAAOAAAABAAAQEAAAAQAAQAABgAAFQAAAA4A3x8AAAAAABwAAAAABwBdGwEAAA4AAAAEAABAQAAABAABAAAHAAAVAAAADgDfHwAAAAAAHAAAAAAHAF0bAQAADgAAAAQAAEBAAAAEAAEAAAgAABUAAAAOAN8fAAAAAAAcAAAAAAcAXRsBAAAOAAAABAAAQEAAAAQAAQAACQAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEACgAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEACwAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEADAAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEADQAADgAAAB0AAAAAAAAAAF0bAQAAFgAAAAwAAAAAAAAAAA8AAAABAAQBAAAAAAAE9wAAAA4AAA4AAAAdAAAAAAAAAABdGwEAABYAAAAMAAAAAAAAAAAPAAAAAQAEAQAAAAAABPgAAAAPAAAOAAAAHQAAAAAAAAAAXRsBAAAWAAAADAAAAAAAAAAADwAAAAEABAEAAAAAAAT6AAAAEAAADgAAAB0AAAAAAAAAAF0bAQAAFgAAAAwAAAAAAAAAAA8AAAABAAQBAAAAAAAE/AAAABEAAA4AAAAdAAAAAAAAAABdGwEAABYAAAAMAAAAAAAAAAAPAAAAAQAEAQAAAAAABP0AAAASAAAOAAAAHQAAAAAAAAAAXRsBAAAWAAAADAAAAAAAAAAADwAAAAEABAEAAAAAAAT+AAAAEwAADgAAAB0AAAAAAAAAAF0bAQAAFgAAAAwAAAAAAAAAAA8AAAABAAQBAAAAAAAE/wAAABQAAA4AAAAdAAAAAAAAAABdGwEAABYAAAAMAAAAAAAAAAAPAAAAAQAEAQAAAAAABAEBAAA=","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"-1,1,8","LocalRotation":"0,0,0,-0.999999","ForceId":0,"TotalBlockCount":40,"MaxCords":"1,1,9","MinCords":"-2,-1,0","BlockIds":[679,140,168,178,178,169,169,169,169,211,211,211,211,156,156,156,156,156,156,156,156,193,193,177,176,177,177,178,177,177,176,176,193,193,193,174,193,178,170,200],"BlockState":"=0,40","AliveCount":40,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":73,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":40},{"ContainedMaterialCost":43.12928,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","0,0,1","0,0,2","0,0,4","2,-1,5","2,0,2","2,-1,2","2,-1,3","2,0,3","1,0,3","1,1,3","2,1,3","0,0,3","0,1,3","-1,1,3","0,1,2","0,1,1","0,-1,2","0,-1,1","-1,-1,2","-1,-1,1","1,1,2","1,1,1","-1,1,2","-1,1,1","1,0,2","1,0,1","1,-1,2","1,-1,1","-1,0,2","1,-1,3","1,0,4","0,1,4","2,1,2","2,0,1","-1,0,3","-1,0,1","2,-1,9","0,0,5","2,-1,4"],"BLR":[0,0,0,0,16,10,14,7,16,4,10,9,7,10,23,5,5,11,11,11,11,5,5,1,1,11,11,15,15,5,15,4,21,2,6,7,5,16,4,16],"BP1":null,"BP2":null,"BCI":[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0],"BEI":null,"BlockData":"AAAAKgAAAAcAAgAAAAAAAAMAAAAAAAABAAAAAAAAJIgAAAAAAF0AAAAAAABdGwEAAAAAAAAEBAEAAA8AABUAAAAOAN8fAAAAAAAcAAAAAAcAXRsBAAAOAAAABAAAQEAAAAQAAQAAEAAAFQAAAA4A3x8AAAAAABwAAAAABwBdGwEAAA4AAAAEAABAQAAABAABAAARAAAVAAAADgDfHwAAAAAAHAAAAAAHAF0bAQAADgAAAAQAAEBAAAAEAAEAABIAABUAAAAOAN8fAAAAAAAcAAAAAAcAXRsBAAAOAAAABAAAQEAAAAQAAQAAEwAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAFAAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAFQAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAFgAADgAAAAYBAQAAAAAAAF0bAQAABgEAAP8AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAFwAADgAAAB0AAAAAAAAAAF0bAQAAFgAAAAwAAAAAAAAAAA8AAAABAAQBAAAAAAAEBQEAABgAAA4AAAAdAAAAAAAAAABdGwEAABYAAAAMAAAAAAAAAAAPAAAAAQAEAQAAAAAABAYBAAAZAAAOAAAAHQAAAAAAAAAAXRsBAAAWAAAADAAAAAAAAAAADwAAAAEABAEAAAAAAAQHAQAAGgAADgAAAB0AAAAAAAAAAF0bAQAAFgAAAAwAAAAAAAAAAA8AAAABAAQBAAAAAAAECAEAABsAAA4AAAAdAAAAAAAAAABdGwEAABYAAAAMAAAAAAAAAAAPAAAAAQAEAQAAAAAABAkBAAAcAAAOAAAAHQAAAAAAAAAAXRsBAAAWAAAADAAAAAAAAAAADwAAAAEABAEAAAAAAAQKAQAAHQAADgAAAB0AAAAAAAAAAF0bAQAAFgAAAAwAAAAAAAAAAA8AAAABAAQBAAAAAAAECwEAACQAAA4AAAAdAAAAAAAAAABdGwEAABYAAAAMAAAAAAAAAAAPAAAAAQAEAQAAAAAABA0BAAAnAAAxAAAAZQAAAAAAAAAAHAAAAAAcAAEAAAAAHAACAAAAABwAdiYAAAAqAEIYAAAARgBdGwEAAFQAAAAEkML1PAEABAIAAAANAAQzUwhEDgAEzczMPQAABAMAAAABAAQAAABAAAAEAgAAAAEABM3MTD0CAATNzMw9AwAEzcxMPQAABHTToUgBAASPrJdFAAAEAgAAAAEAB2Nhbm5vbnM=","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"1,1,8","LocalRotation":"0,0,0,-0.999999","ForceId":0,"TotalBlockCount":40,"MaxCords":"2,1,9","MinCords":"-1,-1,0","BlockIds":[679,178,178,178,168,176,176,177,174,177,177,176,174,177,178,169,169,169,169,211,211,211,211,156,156,156,156,156,156,156,193,193,193,193,193,193,156,170,200,140],"BlockState":"=0,40","AliveCount":40,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":74,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":40},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","0,0,1"],"BLR":[0,0],"BP1":null,"BP2":null,"BCI":[0,0],"BEI":null,"BlockData":"AAAAHAAAABUAAQAAAAAAAOYCAAAABwBdAAAAAA4AXRsBAAAOAAAABPhToz5kAAT4U6M+AAAEFwEAAAEAAA4AAAAHAAAAAAAAAABdGwEAAAAAAAAEGQEAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAAHAAAAIAADycAAAAAAKCGAQAANAAAAAAAADQAAQAAAABaAAAAEAAAAAAAAAAAAAAAAAAAAAABAAQAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAMABAEAAAAAABDzVnWiqXg0Sorcwx+BKu1PBQAMAAAAAAAAAAAAAAAABgABAQAAEPNWdaKpeDRKitzDH4Eq7U8FAAwAAAAAAAAAAAEAAAAGAAEBRykBAAAAAAAVAAAAAAAAAAAAAAAAcycAAAAAAGQAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Telescopic Piston (1m) Constructable","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":682,"LocalPosition":"0,1,0","LocalRotation":"-0.707106,0,0,-0.707106","ForceId":0,"TotalBlockCount":2,"MaxCords":"0,0,1","MinCords":"0,0,0","BlockIds":[681,779],"BlockState":"00","AliveCount":2,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":83,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"593cdf60-b369-4dd5-b475-68c9e974d1d8","ObjectId":"d72204b4-1a53-464f-8dfc-7a4ee84a46ea","CreatorReadableName":"Blarint","HashV1":"b8b250ab887f951a03c38a0c1bb02dbc"},"BlockCount":2}],"BLP":["0,0,0"],"BLR":[0],"BP1":null,"BP2":null,"BCI":[0],"BEI":null,"BlockData":"AAAAHAAAABUAAQAAAAAAAOYCAAAABwBdAAAAAA4AXRsBAAAOAAAABOxRuD1kAATsUbg9AAAEFQEAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAAHAAAAIAADycAAAAAAKCGAQAANAABAAAAADQAAgAAAABaAAAAEAAAAAAAAAAAAAAAAAAAAAABAAQBAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAMABAIAAAAAABDzVnWiqXg0Sorcwx+BKu1PBQAMAAAAAAAAAAAAAAAABgABAQAAEPNWdaKpeDRKitzDH4Eq7U8FAAwAAAAAAQAAAAAAAAAGAAEBRykBAAAAAAAVAAAAAAAAAAAAAAAAcycAAAAAAGQAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Telescopic Piston (1m) Constructable","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":682,"LocalPosition":"0,-1,0","LocalRotation":"-0.707106,0,0,0.707106","ForceId":0,"TotalBlockCount":3,"MaxCords":"0,1,0","MinCords":"0,0,0","BlockIds":[681],"BlockState":"0","AliveCount":1,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":82,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"593cdf60-b369-4dd5-b475-68c9e974d1d8","ObjectId":"d72204b4-1a53-464f-8dfc-7a4ee84a46ea","CreatorReadableName":"Blarint","HashV1":"b8b250ab887f951a03c38a0c1bb02dbc"},"BlockCount":1}],"BLP":["0,0,0"],"BLR":[0],"BP1":null,"BP2":null,"BCI":[0],"BEI":null,"BlockData":"AAAAKgAAACMAAgAAAAAAAAMAAAAABwABAAAAAA4AJIgAAAASAF0AAAAAEgBdGwEAABIAZAAEI5+MwWQABAAA8EEJAAEBAAAERwAAAAEAB3lhd1NlYXQ=","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAAFQAAAEAADycAAAAAAKCGAQAAGgAAAAAAABoAAAAQAAAAAAAAAAAAAAAAAAAAAAEABAAAAAAAABDzVnWiqXg0Sorcwx+BKu1PBQAMAAAAAAAAAAAAAAAABgABAUcpAQAAAAAAFQAAAAAAAAAAAAAAAHMnAAAAAABkAAAAAAAA","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"-1,1,0","LocalRotation":"0,0,0.707106,-0.707106","ForceId":0,"TotalBlockCount":4,"MaxCords":"0,0,0","MinCords":"0,-1,0","BlockIds":[679],"BlockState":"0","AliveCount":1,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":81,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"593cdf60-b369-4dd5-b475-68c9e974d1d8","ObjectId":"d72204b4-1a53-464f-8dfc-7a4ee84a46ea","CreatorReadableName":"Blarint","HashV1":"b8b250ab887f951a03c38a0c1bb02dbc"},"BlockCount":1}],"BLP":["0,0,0","-1,0,0"],"BLR":[0,7],"BP1":null,"BP2":null,"BCI":[0,0],"BEI":null,"BlockData":"AAAAKgAAACUAAgAAAAAAAAMAAAAABwABAAAAAA4AJIgAAAASAF0AAAAAEgBdGwEAABIAZAAEOma6PmQABAAA8EEJAAEBAAAERgAAAAEACXBpdGNoU2VhdA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAAHAAAAIAADycAAAAAAKCGAQAANAAAAAAAADQAAQAAAABaAAAAEAAAAAAAAAAAAAAAAAAAAAABAAQAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAMABAEAAAAAABDzVnWiqXg0Sorcwx+BKu1PBQAMAAAAAAAAAAAAAAAABgABAQAAEPNWdaKpeDRKitzDH4Eq7U8FAAz/////AAAAAAAAAAAGAAEBRykBAAAAAAAVAAAAAAAAAAAAAAAAcycAAAAAAGQAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"-1,1,0","LocalRotation":"-0.499999,-0.499999,-0.499999,0.499999","ForceId":0,"TotalBlockCount":6,"MaxCords":"0,1,0","MinCords":"-1,0,0","BlockIds":[679,1551],"BlockState":"00","AliveCount":2,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":80,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"593cdf60-b369-4dd5-b475-68c9e974d1d8","ObjectId":"d72204b4-1a53-464f-8dfc-7a4ee84a46ea","CreatorReadableName":"Blarint","HashV1":"b8b250ab887f951a03c38a0c1bb02dbc"},"BlockCount":2}],"BLP":["0,0,0","-1,0,0"],"BLR":[0,15],"BP1":null,"BP2":null,"BCI":[0,0],"BEI":null,"BlockData":"AAAAKgAAACQAAgAAAAAAAAMAAAAABwABAAAAAA4AJIgAAAASAF0AAAAAEgBdGwEAABIAZAAEOyoLu2QABAAA8EEJAAEBAAAERQAAAAEACHJvbGxTZWF0","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAAHAAAAIAADycAAAAAAKCGAQAANAAAAAAAADQAAQAAAABaAAAAEAAAAAAAAAAAAAAAAAAAAAABAAQAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAMABAEAAAAAABDzVnWiqXg0Sorcwx+BKu1PBQAMAAAAAAAAAAAAAAAABgABAQAAEPNWdaKpeDRKitzDH4Eq7U8FAAz/////AAAAAAAAAAAGAAEBRykBAAAAAAAVAAAAAAAAAAAAAAAAcycAAAAAAGQAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Stabilized Chair","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"0,1,0","LocalRotation":"0,0,0,-0.999999","ForceId":0,"TotalBlockCount":8,"MaxCords":"0,1,0","MinCords":"-1,0,0","BlockIds":[679,1551],"BlockState":"00","AliveCount":2,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":79,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"593cdf60-b369-4dd5-b475-68c9e974d1d8","ObjectId":"d72204b4-1a53-464f-8dfc-7a4ee84a46ea","CreatorReadableName":"Blarint","HashV1":"b8b250ab887f951a03c38a0c1bb02dbc"},"BlockCount":2}],"BLP":["0,0,0"],"BLR":[0],"BP1":null,"BP2":null,"BCI":[0],"BEI":null,"BlockData":"AAAAKgAAAAcAAgAAAAAAAAMAAAAAAAABAAAAAAAAJIgAAAAAAF0AAAAAAABdGwEAAAAAAAAECQAAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"Stabilized Chair","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"0,1,18","LocalRotation":"0,0.707106,0.707106,0","ForceId":0,"TotalBlockCount":9,"MaxCords":"0,1,0","MinCords":"0,0,0","BlockIds":[679],"BlockState":"0","AliveCount":1,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":78,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":1},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","0,0,-1","1,0,0","0,0,1","0,1,0","0,-1,0"],"BLR":[0,21,19,22,16,9,5],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAAAcAAgAAAAAAAAMAAAAAAAABAAAAAAAAJIgAAAAAAF0AAAAAAABdGwEAAAAAAAAEGwEAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAA==","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":678,"LocalPosition":"0,0,11","LocalRotation":"0,0,0,1","ForceId":0,"TotalBlockCount":7,"MaxCords":"1,1,1","MinCords":"-1,-1,-1","BlockIds":[679,366,366,366,366,366,366],"BlockState":"=0,7","AliveCount":7,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":84,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":7}],"BLP":["-8,1,7","-8,1,8","-5,1,9","5,1,9","8,1,7","8,1,8","-2,0,10","2,0,10","-2,3,14","2,3,14","-1,3,14","1,3,14","-2,2,14","2,2,14","2,-1,18","2,0,18","2,2,17","1,-1,18","1,1,21","1,1,22","0,-1,19","0,1,21","0,1,22","-1,-1,18","-1,1,21","-1,1,22","-2,-1,18","-2,0,18","-2,1,17","-2,2,17","-5,1,10","5,1,10","-7,1,12","7,1,12","-6,1,13","6,1,13","-6,1,12","6,1,12","-7,1,11","7,1,11","2,3,13","-2,3,13","-2,1,14","2,1,14","3,2,13","-3,2,13","-2,0,14","2,0,14","-3,0,13","3,0,13","-5,2,11","5,2,11","-4,2,13","-4,0,13","4,0,13","-5,1,13","5,1,13","-5,1,14","5,1,14","0,3,6","1,3,9","-1,3,9","2,3,9","-2,3,9","-2,1,8","2,1,8","-2,1,7","2,1,7","-2,1,6","2,1,6","-2,1,9","2,1,9","-2,2,9","2,2,9","-4,1,11","4,1,11","-4,1,10","4,1,10","-1,3,10","0,3,10","1,3,10","0,3,14","-3,1,14","3,1,14","4,1,8","-4,1,8","1,0,5","-1,3,5","1,3,5","-1,0,5","0,3,17","0,2,4","0,-1,9","-1,-1,9","1,-1,9","-3,0,6","3,0,6","3,2,10","-3,2,10","4,2,10","-4,2,10","-5,0,11","5,0,11","-3,0,10","3,0,10","-4,0,10","4,0,10","-4,0,9","4,0,9","-5,0,9","5,0,9","-5,0,10","5,0,10","-5,2,10","5,2,10","-5,2,9","5,2,9","-4,2,9","4,2,9","0,2,13","3,1,15","4,1,14","-3,1,15","-4,1,14","3,1,10","3,1,11","-3,1,10","-3,1,11","-1,2,0","-3,2,-1","-3,2,-2","-1,2,1","1,2,1","3,2,-2","3,2,-1","1,2,0","-1,2,16","0,2,17","0,1,7","0,2,5","-1,2,6","-1,1,6","1,1,6","1,0,20","-1,0,20","-9,1,12","9,1,12","9,2,10","-9,2,10","9,0,10","-9,0,10","9,0,12","-9,0,12","9,0,13","-9,0,13","9,2,12","-9,2,12","10,1,10","-10,1,10","-4,1,7","4,1,7","-3,1,5","3,1,5","-1,2,14","1,2,14","0,2,-3","0,0,5","4,2,13","5,2,13","-5,2,13","5,0,13","-5,0,13","6,2,13","-6,2,13","6,0,13","-6,0,13","5,2,14","-5,2,14","5,0,14","4,2,12","-4,2,12","-4,0,12","4,0,12","-5,0,14","-3,1,9","-3,0,9","3,1,9","3,0,9","-2,0,6","2,0,6","-3,1,6","3,1,6","-3,2,9","3,2,9","-3,1,8","3,1,8","-2,-1,9","2,-1,9","4,1,9","-4,1,9","-1,2,5","1,2,5","0,2,1","0,1,1","-1,1,5","1,1,5","0,3,5","0,2,6","0,1,3","10,1,8","-10,1,8","9,1,10","-9,1,10","9,0,9","-9,0,9","-10,1,7","10,1,7","-9,2,8","9,2,8","-9,0,8","9,0,8","9,1,14","-9,1,14","0,1,8","0,-1,10","-1,-1,10","1,-1,10","-1,-1,17","1,-1,17","-2,-1,17","2,-1,17","0,0,17","2,1,17","-1,0,19","1,0,19","0,0,8","1,0,8","-1,0,8","-2,2,10","2,2,10","-2,1,10","2,1,10","0,2,8","-1,2,8","-3,-1,9","3,-1,9","3,-1,10","-3,-1,10","-2,0,9","2,0,9","0,0,15","0,0,14","0,0,13","0,0,12","1,2,6","1,2,8","1,2,9","0,1,16","1,0,21","0,0,21","-1,0,21","1,2,17","-1,2,17","0,2,18","-9,1,7","9,1,7","0,0,19","0,0,16","-1,0,18","-1,0,16","-1,1,16","0,-2,16","0,-1,16","0,-1,18","0,-1,14","0,-2,17"],"BLR":[22,22,3,1,23,23,12,12,18,16,0,0,18,16,16,16,0,12,16,16,12,16,0,12,18,18,18,18,18,0,3,1,21,20,21,20,18,16,21,20,2,2,18,18,0,0,12,12,12,12,3,1,18,12,12,0,0,18,16,0,17,19,17,19,17,19,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,17,2,17,19,0,6,14,14,14,12,12,0,0,0,0,15,13,12,12,12,12,14,14,15,13,15,13,3,1,3,1,2,2,0,16,18,18,16,0,0,0,0,21,22,22,21,20,23,23,20,1,0,10,6,0,4,4,0,0,0,0,0,0,12,12,12,12,12,12,0,0,16,18,22,23,22,23,0,0,2,14,16,0,0,0,0,0,0,0,0,12,12,1,1,3,15,13,3,2,2,2,2,12,12,18,16,2,2,0,0,12,12,2,2,19,17,2,14,19,17,2,6,10,16,18,0,0,10,10,19,17,2,2,14,14,5,5,0,12,18,16,19,17,14,14,0,16,0,0,2,0,0,0,0,0,0,1,1,12,12,12,12,13,15,2,2,2,2,0,16,19,4,16,16,16,0,0,0,0,0,0,0,10,0,0,14,0,2,0,12],"BP1":null,"BP2":null,"BCI":[30,30,31,31,30,30,31,31,31,31,31,31,31,31,31,31,31,31,0,0,31,0,0,31,0,0,31,31,31,31,31,31,30,30,30,30,30,30,30,30,31,31,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,31,31,31,31,0,0,31,31,31,31,0,0,31,31,31,31,0,0,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,29,29,29,29,0,31,0,31,31,31,31,31,31,31,31,31,31,29,31,31,31,31,31,0,0,29,29,31,31,31,31,31,31,31,31,31,31,31,31,29,29,29,29,0,0,31,31,31,29,29,29,29,29,29,29,29,31,31,31,30,30,30,30,31,31,0,31,31,31,31,31,31,30,30,31,31,31,31,0,0,31,31,31,31,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,30,30,0,0,0,0,0,0,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,31,31,29,0,0,0,31,0,0,0,31,31,31,31,0],"BEI":null,"BlockData":"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","VehicleData":"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","designChanged":false,"blueprintVersion":27,"blueprintName":"Mouse Aim Demonstrator","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":691,"LocalPosition":"29305.27,311.5779,8404.729","LocalRotation":"0.003142612,0.1527925,-0.0004672864,0.9882532","ForceId":1284965004,"TotalBlockCount":441,"MaxCords":"10,3,22","MinCords":"-10,-2,-4","BlockIds":[1776,1772,1187,1187,1776,1772,1187,1187,1220,1224,1196,1196,1201,1204,1221,1197,1221,1181,1282,1306,1197,829,1277,1180,1283,1302,1225,1197,1180,1225,1187,1187,1774,1774,1773,1773,1769,1769,1770,1770,1192,1193,1186,1186,1172,1173,1187,1187,1172,1173,1195,1195,1220,1220,1224,833,833,1195,1195,1187,1202,1205,1221,1225,652,652,648,648,648,648,622,622,1202,1205,129,129,129,129,1544,1544,1544,1779,130,130,130,130,1184,1221,1221,1182,1773,1095,1197,1217,1213,1220,1224,1186,1186,1185,1185,1195,1195,1186,1186,1185,1185,1195,1195,1211,1215,1195,1195,1195,1195,1215,1211,1195,1195,767,971,971,971,971,130,130,130,130,1771,1771,1775,1775,1775,1775,1771,1771,1543,834,391,1095,419,1185,1185,129,129,1227,1227,1770,1770,1185,1185,1769,1769,1773,1773,1774,1774,971,971,969,969,969,969,791,791,1227,1196,1224,749,749,749,749,749,749,749,749,945,944,945,1163,1162,1163,1162,944,621,663,621,663,1201,1204,1195,1195,1160,1161,833,833,973,973,670,670,1554,1554,1544,1554,1537,1538,1554,1361,1360,964,964,1185,1185,1186,1186,968,968,1166,1167,1167,1166,1130,1130,791,1187,1192,1193,1202,1205,1217,1213,785,1181,747,747,397,804,804,1187,1187,1187,1187,275,287,623,623,971,971,1185,1185,150,153,153,153,419,273,285,780,1140,1140,1140,1180,1181,1197,129,129,747,336,813,335,346,362,335,1185,1185,1319],"BlockState":"=0,276","AliveCount":276,"BlockStringData":["local BlockUtil = {}\r\nlocal Combat = {}\r\nlocal StringUtil = {}\r\nlocal Accumulator = {}\r\nlocal Differ = {}\r\nlocal Graph = {}\r\nlocal Heapq = {}\r\nlocal LinkedList = {}\r\nlocal MathUtil = {}\r\nlocal Matrix3 = {}\r\nlocal RingBuffer = {}\r\nlocal Search = {}\r\nlocal Stats = {}\r\nlocal VectorN = {}\r\nlocal Control = {}\r\nlocal Nav = {}\r\nlocal Scheduling = {}\r\nlocal Targeting = {}\r\n\r\n-- Settings\r\n-- Flight Settings\r\n-- full roll will point top of aircraft towards desired direction\r\n  -- actual roll will be error angle / fullRollAngle\r\n  -- times the full roll, capped at 1\r\nlocal fullRollRate = 40\r\nlocal fullRollAngle = 40\r\n\r\nlocal autoAimAngle = 5.5\r\nlocal autoFireRange = 2000\r\nlocal lockRange = 3000\r\nlocal maxFireAngle = 5\r\nlocal mainWeaponName = \"cannons\"\r\n\r\n-- trim in case of unbalanced aircraft (yaw/pitch/roll)\r\n  -- in breadboards and lua, positive pitch is pitch down\r\nlocal trim = {yaw = 0, pitch = 0, roll = 0}\r\n\r\n-- PIDFF constants\r\n--[[\r\n  Tides uses the parallel form of PID, i.e. K_p * e(t) + K_i * integral of e(t) + K_d * d/dt e(t),\r\n  whereas stock PIDs use the standard form, i.e. K_p * [e(t) + 1/T_i * integral of e(t) + T_d * d/dt e(t)].\r\n  To convert from standard form coefficients to parallel form coefficients,\r\n  K_p remains the same,\r\n  K_d = T_d * K_p,\r\n  K_i = K_p / T_i\r\n\r\n  to deal with global/local coordinate\r\n  issues, the feedforward controllers\r\n  will receive the desired angular\r\n  velocity instead of the direction\r\n--]]\r\nlocal yawS   = {  P = 0.025,\r\n                  I = 0.05,\r\n                  D = 0.02,\r\n                  IDecay = 0.125, -- set IDecay to 1 to match stock PID behavior\r\n                  V = 0.001, -- advanced: feedforward constants. set to 0 for stock PID behavior\r\n                  A = 0,\r\n                  FFwindow = 0.2,\r\n                  FFdecay = 0.2  }\r\nlocal pitchS = {  P = 0.04,\r\n                  I = 0.1,\r\n                  D = 0.015,\r\n                  IDecay = 0.125,\r\n                  V = 0.004,\r\n                  A = 0,\r\n                  FFwindow = 0.2,\r\n                  FFdecay = 0.2  }\r\nlocal rollS  = {  P = 0.03,\r\n                  I = 0,\r\n                  D = 0.01,\r\n                  IDecay = 0.125,\r\n                  V = 0,\r\n                  A = 0,\r\n                  FFwindow = 0.2,\r\n                  FFdecay = 0.2  }\r\n\r\n-- Cockpit Settings\r\n--[[\r\n  the amount by which the chair shifts rambot's head relative to the center\r\n  of the cockpit.\r\n  the camera position in the chair is not centered. I suspect it was placed\r\n  by hand. These values are simply my best guess.\r\n \r\n  Normally (-0.01, 1, 0.09) from the chair center, (-0.01, 1.68, 0.09) for elevated\r\n]]--\r\nlocal chairOffset = Vector3(-0.009, 0, 0)\r\n\r\n-- shifts crosshairs to compensate for non-centered images\r\nlocal hologramOffset = Vector3(0, 0, 0)\r\n\r\n-- distance from camera to HUD\r\nlocal hudDistance = 0.65\r\n\r\n-- the name of the spinblocks that stabilize the chair\r\n  -- set to nil if using articulated chair\r\nlocal chairSpinblockNames = {  roll = \"rollSeat\",\r\n                               pitch = \"pitchSeat\",\r\n                               yaw = \"yawSeat\"  }\r\n\r\n-- the position of the chair relative to vehicle origin\r\n  -- only needed if using articulated chair\r\nlocal manualHeadPos = Vector3(0, 1, 19)\r\n\r\n-- the name of the weapon used to steer the craft\r\nlocal steeringWepName = \"joystick\"\r\n\r\n-- \"leading\" mode will tell you where to shoot\r\n  -- \"trailing\" mode will tell you where you'll hit if you shoot now\r\nlocal sightMode = \"trailing\"\r\n\r\nlocal sightProjNames = {  aim = \"aimProjector\",\r\n                          lead = \"leadProjector\",\r\n                          lock = \"lockProjector\"  }\r\n\r\n-- shell velocity of your cannon\r\nlocal muzzleVel = 1129\r\n\r\n-- averaging time and decay rate for acceleration tracking\r\n  -- set accelAvgTime to 0 to ignore acceleration\r\nlocal accelAvgTime = 0.2\r\nlocal accelDecay = 0.1\r\n\r\nlocal steerAvgTime = 0.125\r\nlocal steerDecay = 0.0625\r\n\r\n-- misc variables\r\nlocal timeDiff\r\nlocal velDiff\r\nlocal pointDiff, pointAcc\r\nlocal rollDiff\r\nlocal rollAcc, pitchAcc, yawAcc\r\nlocal accelAcc\r\nlocal pitchPID, pitchFF\r\nlocal yawPID, yawFF\r\nlocal rollPID, rollFF\r\nlocal proj = {}\r\nlocal lastDir\r\nlocal gunOffset\r\nlocal headPos\r\nlocal prevTarget\r\n\r\nlocal steeringWep\r\nlocal mainWeps\r\nlocal chairSpinblocks = {}\r\nlocal inited = false\r\nlocal DEBUG = true\r\n\r\nfunction Init(I)\r\n  if chairSpinblockNames then\r\n    for block, name in pairs(chairSpinblockNames) do\r\n      chairSpinblocks[block] = BlockUtil.getSubConstructsByName(I, name, 1)[1]\r\n    end\r\n  end\r\n  SetHeadPos(I)\r\n  steeringWep = BlockUtil.getWeaponsByName(I, steeringWepName, 1)[1]\r\n  mainWeps = BlockUtil.getWeaponsByName(I, mainWeaponName, -1)\r\n  gunOffset = Vector3.zero\r\n  for i, wep in ipairs(mainWeps) do\r\n    local info = BlockUtil.getWeaponInfo(I, wep)\r\n    gunOffset = gunOffset + info.LocalFirePoint\r\n  end\r\n  gunOffset = gunOffset / #mainWeps - headPos\r\n\r\n  for p, name in pairs(sightProjNames) do\r\n    proj[p] = BlockUtil.getBlocksByName(I, sightProjNames[p], 33, 1)[1]\r\n  end\r\n\r\n  timeDiff = Differ.Differ(I:GetGameTime())\r\n  velDiff = Differ.Differ(Vector3.zero)\r\n  if accelAvgTime > 0 then\r\n    accelAcc = Accumulator.Accumulator(accelAvgTime, accelDecay)\r\n  end\r\n\r\n  pointDiff = Differ.Differ(I:GetConstructForwardVector())\r\n  if steerAvgTime > 0 then\r\n    pointAcc = Accumulator.Accumulator(steerAvgTime, steerDecay)\r\n  end\r\n  rollDiff = Differ.Differ(0)\r\n  yawAcc = Accumulator.Accumulator(yawS.FFwindow, yawS.FFdecay)\r\n  pitchAcc = Accumulator.Accumulator(pitchS.FFwindow, pitchS.FFdecay)\r\n  rollAcc = Accumulator.Accumulator(rollS.FFwindow, rollS.FFdecay)\r\n\r\n  pitchPID = Control.PID(pitchS.P, pitchS.I, pitchS.D, pitchS.IDecay, 0, 360)\r\n  yawPID = Control.PID(yawS.P, yawS.I, yawS.D, yawS.IDecay, 0, 360)\r\n  rollPID = Control.PID(rollS.P, rollS.I, rollS.D, rollS.IDecay, 0, 360)\r\n  pitchFF = Control.FF({pitchS.V, pitchS.A})\r\n  yawFF = Control.FF({yawS.V, yawS.A})\r\n  rollFF = Control.FF({rollS.V, rollS.A})\r\nend\r\n\r\nfunction Update(I)\r\n  if not inited then\r\n    Init(I)\r\n    inited = true\r\n    return\r\n  end\r\n\r\n  local elapsedTime = Differ.update(timeDiff, I:GetGameTime())\r\n\r\n  SetHeadPos(I)\r\n  RotateSeat(I)\r\n\r\n  local target = Combat.pickTarget(I, 0, Priority)\r\n  if not target or (prevTarget and prevTarget.Id ~= target.Id) then\r\n    SwapTarget(target)\r\n  end\r\n  prevTarget = target\r\n\r\n  if target and accelAvgTime > 0 then\r\n    local dv = Differ.update(velDiff, target.Velocity) / elapsedTime\r\n    Accumulator.update(accelAcc, dv, elapsedTime)\r\n  end\r\n  Sight(I, target)\r\n  Steer(I)\r\nend\r\n\r\nfunction SetHeadPos(I)\r\n  if manualHeadPos then\r\n    headPos = manualHeadPos\r\n  elseif chairSpinblockNames then\r\n    local rotation = Quaternion.LookRotation(I:GetConstructForwardVector(), I:GetConstructUpVector())\r\n    local invRot = Quaternion.Inverse(rotation)\r\n    headPos = invRot * (I:GetSubConstructInfo(chairSpinblocks.roll).Position - I:GetConstructPosition())\r\n  else\r\n    headPos = Vector3.Zero\r\n  end\r\nend\r\n\r\nfunction Priority(I, t)\r\n  local relPos = t.Position - I:GetConstructPosition()\r\n  local rangePenalty = 0\r\n  if relPos.magnitude > lockRange then rangePenalty = 1000000 end\r\n  return -Vector3.Angle(relPos, BlockUtil.getWeaponInfo(I, steeringWep).CurrentDirection) - rangePenalty\r\nend\r\n\r\nfunction RotateSeat(I)\r\n  if chairSpinblockNames then\r\n    local av = I:GetLocalAngularVelocity() * Differ.get(timeDiff)\r\n    I:SetSpinBlockRotationAngle(chairSpinblocks.yaw, -I:GetConstructYaw() - Mathf.Rad2Deg * av.y)\r\n    I:SetSpinBlockRotationAngle(chairSpinblocks.pitch, I:GetConstructPitch() + Mathf.Rad2Deg * av.x)\r\n    I:SetSpinBlockRotationAngle(chairSpinblocks.roll, -I:GetConstructRoll() - Mathf.Rad2Deg * av.z)\r\n  end\r\nend\r\n\r\nfunction PositionReticle(I, aim, lead, lock)\r\n  local seatPosLoc = headPos + 0.5 * Vector3.forward\r\n  local vecs = {aim = aim, lead = lead, lock = lock}\r\n  local r = (Mathf.Repeat(I:GetConstructRoll() + 90, 180) - 90)\r\n  for p, id in pairs(proj) do\r\n    vecs[p] = vecs[p] + Quaternion.AngleAxis(-r, Vector3.forward) * hologramOffset\r\n    if vecs[p].z >= 0 then\r\n      vecs[p].z = 0\r\n      local info = I:Component_GetBlockInfo(33, id)\r\n      local dest = (vecs[p] + hudDistance * Vector3.forward).normalized * hudDistance + seatPosLoc\r\n      local diff = dest - info.LocalPosition\r\n      I:Component_SetBoolLogic(33, id, true)\r\n      I:Component_SetFloatLogic_1(33, id, 2, diff.z)\r\n      I:Component_SetFloatLogic_1(33, id, 3, diff.x)\r\n      I:Component_SetFloatLogic_1(33, id, 4, diff.y)\r\n      I:Component_SetFloatLogic_1(33, id, 5, Mathf.Atan2(vecs[p].x, hudDistance) * Mathf.Rad2Deg)\r\n      I:Component_SetFloatLogic_1(33, id, 6, Mathf.Atan2(-vecs[p].y, hudDistance) * Mathf.Rad2Deg)\r\n      I:Component_SetFloatLogic_1(33, id, 7, -r)\r\n    else\r\n      I:Component_SetBoolLogic(33, id, false)\r\n    end\r\n  end\r\nend\r\n\r\nfunction Sight(I, target)\r\n  local fw = I:GetConstructForwardVector()\r\n  local rotation = Quaternion.LookRotation(fw, I:GetConstructUpVector())\r\n  local invRot = Quaternion.Inverse(rotation)\r\n  local offset = invRot * chairOffset\r\n  local sw = BlockUtil.getWeaponInfo(I, steeringWep)\r\n  local pointing = sw.CurrentDirection\r\n  local pLoc = invRot * pointing\r\n  local leadOffset = Vector3(0, 0, -1)\r\n  local lockOffset = Vector3(0, 0, -1)\r\n  local aimDir = MathUtil.clampCone(Vector3.forward, pLoc, maxFireAngle)\r\n  local aimOffset = offset + hudDistance * aimDir / aimDir.z\r\n  if target then\r\n    local relPos = target.Position - (rotation * (headPos + gunOffset) + I:GetConstructPosition())\r\n    local relVel = target.Velocity - I:GetVelocityVector()\r\n    local grav = I:GetGravityForAltitude(I:GetConstructPosition().y)\r\n    local ac, w\r\n    if accelAvgTime > 0 then ac, w = Accumulator.get(accelAcc) else ac, w = Vector3.zero, 1 end\r\n    local accel = -grav --ac / w - grav\r\n    local intercept, t = Targeting.secondOrderTargeting(relPos, relVel, accel, muzzleVel, -math.huge, math.huge)\r\n    local globalIntercept = intercept + (rotation * (headPos + gunOffset) + I:GetConstructPosition())\r\n    lockOffset = (invRot * relPos) / Mathf.Abs(Vector3.Dot(relPos, fw)) * (hudDistance - offset.z)\r\n    if t then\r\n      if Vector3.Angle(fw, intercept) < autoAimAngle\r\n       and intercept.magnitude < autoFireRange then\r\n        local optPointing = (intercept - rotation * gunOffset).normalized\r\n        for i, wep in ipairs(mainWeps) do\r\n          local info = BlockUtil.getWeaponInfo(I, wep)\r\n          if not info.PlayerCurrentlyControllingIt then\r\n            local diff = globalIntercept - info.GlobalFirePoint\r\n            diff = MathUtil.clampCone(I:GetConstructForwardVector(), diff, maxFireAngle)\r\n            pointing = optPointing\r\n            BlockUtil.aimWeapon(I, wep, diff, 0)\r\n            BlockUtil.fireWeapon(I, wep, 0)\r\n          end\r\n        end\r\n      end\r\n      if sightMode == \"trailing\" then\r\n        pointing = MathUtil.clampCone(I:GetConstructForwardVector(), pointing, maxFireAngle)\r\n        local shellPosition = t * (muzzleVel * pointing - relVel) + 0.5 * t * t * (-accel)\r\n        local shellPosLoc = invRot * shellPosition + gunOffset\r\n\r\n        leadOffset = offset + (hudDistance - offset.z) / Mathf.Abs(shellPosLoc.z) * shellPosLoc\r\n      elseif sightMode == \"leading\" then\r\n        local enemyPosLoc = invRot * intercept\r\n\r\n        leadOffset = offset + (hudDistance - offset.z) / Mathf.Abs(enemyPosLoc.z) * enemyPosLoc\r\n      end\r\n      aimOffset = offset + (hudDistance - offset.z) / relPos.magnitude * gunOffset + hudDistance * aimDir / aimDir.z\r\n    end\r\n  end\r\n  aimOffset.z = 0\r\n  PositionReticle(I, aimOffset, leadOffset, lockOffset)\r\nend\r\n\r\nfunction Steer(I)\r\n  I:TellAiThatWeAreTakingControl()\r\n\r\n  local pointing\r\n  local cWep = BlockUtil.getWeaponInfo(I, steeringWep)\r\n  local elapsedTime = Differ.get(timeDiff)\r\n  if cWep.PlayerCurrentlyControllingIt then\r\n    lastDir = nil\r\n    if steerAvgTime > 0 then\r\n      local wt\r\n      pointing, wt = Accumulator.update(pointAcc, cWep.CurrentDirection, elapsedTime)\r\n      pointing = pointing / wt\r\n    else\r\n      pointing = cWep.CurrentDirection\r\n    end\r\n  else\r\n    if not lastDir then\r\n      lastDir = I:GetConstructForwardVector()\r\n      lastDir.y = 0\r\n      lastDir = lastDir.normalized\r\n    end\r\n    pointing = lastDir\r\n  end\r\n\r\n\r\n  local fw = I:GetConstructForwardVector()\r\n  local yawE = MathUtil.angleOnPlane(fw, pointing, I:GetConstructUpVector())\r\n  local pitchE = MathUtil.angleOnPlane(fw, pointing, I:GetConstructRightVector())\r\n\r\n  local pointDel = Differ.update(pointDiff, pointing) / elapsedTime\r\n  local pointVel = Vector3.Cross(pointing, pointDel) * Mathf.Rad2Deg\r\n\r\n  local r, wt\r\n  r, wt = Accumulator.update(yawAcc,\r\n    Vector3.Dot(pointVel, I:GetConstructUpVector()),\r\n    elapsedTime)\r\n  local yawRate = r / wt\r\n  r, wt = Accumulator.update(pitchAcc,\r\n    Vector3.Dot(pointVel, I:GetConstructRightVector()),\r\n    elapsedTime)\r\n  local pitchRate = r / wt\r\n\r\n  local rollScale = Mathf.Min(1, Vector3.Angle(pointing, fw) / fullRollAngle)\r\n  local trs = rollScale * rollScale\r\n  local pra = rollScale * rollScale * MathUtil.angleOnPlane(Vector3.up, pointing, I:GetConstructForwardVector())\r\n  rollScale = Mathf.Min(1, pointVel.magnitude / fullRollRate)\r\n  local rra = rollScale * rollScale * MathUtil.angleOnPlane(Vector3.up, pointDel, I:GetConstructForwardVector())\r\n  trs = trs + rollScale * rollScale\r\n  local desiredRoll = (pra + rra) / Mathf.Max(1, trs) \r\n  if desiredRoll ~= desiredRoll then desiredRoll = 0 end\r\n  local rollE = desiredRoll - I:GetConstructRoll()\r\n  if rollE < -180 then\r\n    rollE = rollE + 360\r\n  elseif rollE > 180 then\r\n    rollE = rollE - 360\r\n  end\r\n\r\n  r, wt = Accumulator.update(rollAcc,\r\n    Differ.update(rollDiff, desiredRoll) / elapsedTime,\r\n    elapsedTime)\r\n  local rollRate = r / wt\r\n\r\n  --steering\r\n  local yaw = Control.processPID(yawPID, yawE, elapsedTime)\r\n              + Control.processFF(yawFF, yawRate, elapsedTime)\r\n  local pitch = Control.processPID(pitchPID, pitchE, elapsedTime)\r\n              + Control.processFF(pitchFF, pitchRate, elapsedTime)\r\n  local roll = Control.processPID(rollPID, rollE, elapsedTime)\r\n              + Control.processFF(rollFF, rollRate, elapsedTime)\r\n\r\n  --positive: yaw right, pitch down, roll left\r\n  I:RequestControl(2, 2, roll + trim.roll)\r\n  I:RequestControl(2, 5, pitch + trim.pitch)\r\n  I:RequestControl(2, 1, yaw + trim.yaw)\r\nend\r\n\r\nfunction SwapTarget(newTarget)\r\n  velDiff = Differ.Differ(newTarget and newTarget.Velocity or Vector3.zero)\r\n  accelAcc = Accumulator.Accumulator(accelAvgTime, accelDecay)\r\nend\r\n\r\nfunction Accumulator.Accumulator(a,b)local c={}c.decay=b;c.window=a;c.time=0;c.weight=0;if a>0 then c.vals=LinkedList.LinkedList()c.times=LinkedList.LinkedList()end;return c end;function Accumulator.update(c,d,e)local f=Mathf.Pow(c.decay,e)if not c.value then c.value=d*e else c.value=c.value*f;c.value=c.value+d*e end;c.time=c.time+e;c.weight=c.weight*f;c.weight=c.weight+e;if c.window>0 then LinkedList.pushFront(c.vals,d)LinkedList.pushFront(c.times,e)while c.time>c.window do local g=LinkedList.popBack(c.times)c.time=c.time-g;local h=Mathf.Pow(c.decay,c.time)c.weight=c.weight-g*h;c.value=c.value-LinkedList.popBack(c.vals)*g*h end end;return c.value,c.weight end;function Accumulator.get(c)return c.value,c.weight end;function Differ.Differ(i)local j={}j.lastVal=i;j.diff=nil;return j end;function Differ.update(j,d)if j.lastVal then j.diff=d-j.lastVal;j.lastVal=d end;j.lastVal=d;return j.diff end;function Differ.get(j)return j.diff end;function Heapq.Heapq(i,k)local l={}l.data=i;l.comp=k or function(m,n)return m<n end;local o=#l.data;l.size=o;for p=math.floor(o/2),1,-1 do Heapq.siftDown(l,p)end;return l end;function Heapq.siftDown(l,q)local r=false;local s=q;local o=#l.data;while not r do r=true;local t=2*s;local u=2*s+1;local v=s;if t<=o and l.comp(l.data[t],l.data[v])then v=t;r=false end;if u<=o and l.comp(l.data[u],l.data[v])then v=u;r=false end;if not r then local w=l.data[v]l.data[v]=l.data[s]l.data[s]=w;s=v end end end;function Heapq.siftUp(l,q)local r=false;local s=q;while not r do r=true;local x=math.floor(s/2)if l.comp(l.data[s],l.data[x])then local w=l.data[x]l.data[x]=l.data[s]l.data[s]=w;s=x;r=false end end end;function Heapq.insert(l,y)l.data[l.size+1]=y;l.size=l.size+1;Heapq.siftUp(l,l.size)end;function Heapq.pop(l)local z=l.data[1]l.data[1]=l.data[l.size]l.data[l.size]=nil;l.size=l.size-1;Heapq.siftDown(l,1)return z end;function Heapq.peek(l)return l.data[1]end;function Heapq.size(l)return l.size end;function LinkedList.LinkedList()local A={}A.value=nil;A.next=A;A.prev=A;return A end;function LinkedList.pushFront(B,d)local A={}A.value=d;LinkedList.connect(A,B.next)LinkedList.connect(B,A)end;function LinkedList.pushBack(B,d)local A={}A.value=d;LinkedList.connect(B.prev,A)LinkedList.connect(A,B)end;function LinkedList.popFront(B)local C=B.next.value;LinkedList.connect(B,B.next.next)return C end;function LinkedList.popBack(B)local C=B.prev.value;LinkedList.connect(B.prev.prev,B)return C end;function LinkedList.peekFront(B)return B.next.val end;function LinkedList.peekBack(B)return B.prev.val end;function LinkedList.connect(D,E)D.next=E;E.prev=D end;function LinkedList.toArray(B)local F=1;local G={}local A=B.next;while A~=B do G[F]=A.value;A=A.next end;return G end;function MathUtil.angleOnPlane(H,I,J)local K=Vector3.ProjectOnPlane(H,J)local g=Vector3.ProjectOnPlane(I,J)return Vector3.SignedAngle(K,g,J)end;function MathUtil.min(L,M)local N=nil;M=M or function(m,n)return m<n end;for O in L do if not N or M(O,N)then N=O end end;return N end;function MathUtil.max(L,M)local P=nil;M=M or function(m,n)return m<n end;for O in L do if not P or M(P,O)then P=O end end;return P end;function MathUtil.range(m,n,Q)local R,S=m,n;local T;if not m then return end;if not n then R=0;S=m;T=R<S and 1 or-1 elseif Q then T=Q end;return function(U,V)local W=V+T;if W==S then return nil end;return W end,nil,R-T end;function MathUtil.shuffle(B,X)local s=X and B or{}if not X then for F=1,#B do s[F]=B[F]end end;for F=#B,2,-1 do local Y=math.random(F)s[F],s[Y]=s[Y],s[F]end;return s end;function MathUtil.combine(m,n,Z)if#m==#n then local z={}for _,a0 in pairs(m)do z[_]=Z(_,a0,n[_])end;return z end end;function MathUtil.angleSSS(m,n,Q)if m+n<Q or m+Q<n or n+Q<m then return nil end;local a1=math.deg(math.acos((n*n+Q*Q-m*m)/(2*n*Q)))local a2,a3=MathUtil.angleSAS(n,a1,Q)return a1,a2,a3 end;function MathUtil.sideSAS(m,a3,n)local a4=m*m+n*n-2*m*n*math.cos(math.rad(a3))return math.sqrt(a4)end;function MathUtil.angleSAS(m,a3,n)local Q=MathUtil.sideSAS(m,a3,n)if MathUtil.isZero(Q)then return nil end;local a1,a2;if m<n then a1=MathUtil.angleLoSin(Q,m,a3)a2=180-a1-a3 else a2=MathUtil.angleLoSin(Q,n,a3)a1=180-a2-a3 end;return a1,a2 end;function MathUtil.sideSSA(m,n,a1)local a5=n*n-m*m;local a6=-2*n*math.cos(math.rad(a1))local a7,a8=MathUtil.solveQuadratic(1,a6,a5)if not a8 then return a7,a8 end;if a7<a8 then return a7,a8 end;return a8,a7 end;function MathUtil.angleSSA(m,n,a1)local a7,a8=MathUtil.sideSSA(m,n,a1)if not a7 then return nil end;local a9,aa=MathUtil.angleSAS(n,a1,a7)if not a8 then return a9,aa end;local ab,ac=MathUtil.angleSAS(n,a1,a8)return a9,aa,ab,ac end;function MathUtil.sideAAS(a1,a2,m)local a3=180-a1-a2;local n=MathUtil.sideLoSin(a1,a2,m)local Q=MathUtil.sideLoSin(a1,a3,m)return n,Q end;function MathUtil.sideLoSin(m,a1,a2)return m*math.sin(math.rad(a2))/math.sin(math.rad(a1))end;function MathUtil.angleLoSin(m,n,a1)return math.deg(math.asin(n*math.sin(math.rad(a1))/m))end;function MathUtil.clampCone(ad,ae,af)local ag=math.min(af,Vector3.Angle(ad,ae))local ah=Vector3.Cross(ad,ae)return Quaternion.AngleAxis(ag,ah)*ad end;function MathUtil.newton(ai,aj,ak,al,am,an)al=al or 1e-5;an=an or 10*al;am=am or 25;aj=aj or function(ao)return(ai(ao+an)-ai(ao))/an end;ak=ak or 0;local ap=al+1;local aq=0;while ap>al and aq<am do local ar=ai(ak)local as=aj(ak)if not ar or not as then return nil end;ap=-ar/as;ak=ak+ap;aq=aq+1 end;if aq<am then return ak,false end;return ak,true end;function MathUtil.ITP(ai,m,n,al,am)if ai(m)*ai(n)>0 then return nil end;if ai(m)>ai(n)then ai=function(ao)return-ai(ao)end end;al=al or 1e-5;am=am or 25;local at=0.2/(n-m)local au=2;local av=1;local aw=math.ceil(math.log((n-m)/(2*al),2))local ax=aw+av;local aq=am;for Y=1,am do local ay=ai(m)local az=ai(n)local aA=ay-az;if aA==0 then return m end;local aB=0.5*(m+n)local aC=(n*ay+m*az)/aA;if aB<m or aB>n then aB=0.5*(m+n)end;local aD=aB-aC;local aE=at*math.abs(n-m)^au;local aF=aD>0 and 1 or(aD==0 and 0 or-1)local aG=aE<=math.abs(aD)and aC+aF*aE or aB;local aH=al*2^(ax-Y)-0.5*(n-m)local aI=math.abs(aG-aB)<=aH and aG or aB-aF*aH;local aJ=ai(aI)if aJ>0 then n=aI elseif aJ<0 then m=aI else return aI,Y==am end;if n-m<2*al then aq=Y;break end end;local ay=ai(m)local az=ai(n)local aA=az-ay;if aA~=0 then return(m*az-n*ay)/aA,aq==am end;return m,aq==am end;function MathUtil.binomCoeffs(aK,aL)if aL then local aM={}else local aM={}aM[1]=1;for _=1,aK do aM[_+1]=aM[_]*(aK-_)/(_+1)end;return aM end end;function MathUtil.ruleOfSigns(aM,aN)local aO={}local aP=#aM;for F=1,aP do aO[F]=aM[aP-F+1]end;if aN~=0 then local aQ={}for F=1,aP do aQ[F]=(F-1)*aM[aP-F+1]end;local aR=1;for F=2,aP do local aS=aN^(F-1)for Y=1,aP-F+1 do local aT=F+Y-1;aO[Y]=aO[Y]+aR*aQ[aT]*aS;aQ[aT]=aQ[aT]*(Y-1)end;aR=aR/F end end;local aU={}local o=1;for F,aV in ipairs(aO)do if aV~=0 then aU[o]=aV;o=o+1 end end;local aW=0;for F=1,#aU-1 do if aU[F]*aU[F+1]<0 then aW=aW+1 end end;return aW end;function MathUtil.cache(ai)local Q={}local aX=getmetatable(Q)or{}function aX.__index(aY,ao)local C=ai(ao)aY[ao]=C;return C end;setmetatable(Q,aX)return function(m)return Q[m]end end;function MathUtil.lerp(ai,R,S,T,aZ)local a_={}for F=1,math.floor((S-R)/T)+1 do a_[F]=ai(R+F*T)end;a_.start=R;a_.stop=S;a_.step=T;a_.lval=aZ and a_[1]or nil;a_.rval=aZ and a_[#a_]or nil;return function(ao)if ao>=a_.stop then return a_.rval end;if ao<=a_.start then return a_.lval end;local F=(ao-a_.start)/a_.step;local b0=F%1;F=math.floor(F)return(1-b0)*a_[F]+b0*a_[F+1]end end;function MathUtil._factorial(o)if o<2 then return 1 end;return MathUtil._factorial(o-1)end;MathUtil.factorial=MathUtil.cache(MathUtil._factorial)MathUtil.eps=1e-9;function MathUtil.isZero(h)return h>-MathUtil.eps and h<MathUtil.eps end;function MathUtil.setTolerance(al)MathUtil.eps=al end;function MathUtil.cuberoot(ao)return ao>0 and ao^(1/3)or-math.abs(ao)^(1/3)end;function MathUtil.solveQuadratic(b1,a7,a8)local b2,b3;local b4,b5,b6;b4=a7/(2*b1)b5=a8/b1;b6=b4*b4-b5;if MathUtil.isZero(b6)then b2=-b4;return b2 elseif b6<0 then return else local b7=math.sqrt(b6)b2=b7-b4;b3=-b7-b4;return b2,b3 end end;function MathUtil.solveCubic(b1,a7,a8,b8)local b2,b3,b9;local ba,bb;local a1,a2,a3;local bc,b4,b5;local bd,b6;a1=a7/b1;a2=a8/b1;a3=b8/b1;bc=a1*a1;b4=1/3*(-(1/3)*bc+a2)b5=0.5*(2/27*a1*bc-1/3*a1*a2+a3)bd=b4*b4*b4;b6=b5*b5+bd;if MathUtil.isZero(b6)then if MathUtil.isZero(b5)then b2=0;ba=1 else local be=MathUtil.cuberoot(-b5)b2=2*be;b3=-be;ba=2 end elseif b6<0 then local bf=1/3*math.acos(-b5/math.sqrt(-bd))local g=2*math.sqrt(-b4)b2=g*math.cos(bf)b3=-g*math.cos(bf+math.pi/3)b9=-g*math.cos(bf-math.pi/3)ba=3 else local b7=math.sqrt(b6)local be=MathUtil.cuberoot(b7-b5)local a0=-MathUtil.cuberoot(b7+b5)b2=be+a0;ba=1 end;bb=1/3*a1;if ba>0 then b2=b2-bb end;if ba>1 then b3=b3-bb end;if ba>2 then b9=b9-bb end;return b2,b3,b9 end;function MathUtil.solveQuartic(b1,a7,a8,b8,bg)local b2,b3,b9,bh;local aM={}local bi,be,a0,bb;local a1,a2,a3,b6;local bc,b4,b5,bj;local ba=0;a1=a7/b1;a2=a8/b1;a3=b8/b1;b6=bg/b1;bc=a1*a1;b4=-0.375*bc+a2;b5=0.125*bc*a1-0.5*a1*a2+a3;bj=-(3/256)*bc*bc+0.0625*bc*a2-0.25*a1*a3+b6;if MathUtil.isZero(bj)then aM[3]=b5;aM[2]=b4;aM[1]=0;aM[0]=1;local bk={MathUtil.solveCubic(aM[0],aM[1],aM[2],aM[3])}ba=#bk;b2,b3,b9=bk[1],bk[2],bk[3]elseif MathUtil.isZero(b5)then local bl={MathUtil.solveQuadratic(1,b4,bj)}if bl[1]>=0 then b2=-math.sqrt(bl[1])b3=math.sqrt(bl[1])ba=2 end;if bl[2]>=0 then if ba==0 then b2=-math.sqrt(bl[2])b3=math.sqrt(bl[2])ba=2 else b9=-math.sqrt(bl[2])bh=math.sqrt(bl[2])ba=4 end end else aM[3]=0.5*bj*b4-0.125*b5*b5;aM[2]=-bj;aM[1]=-0.5*b4;aM[0]=1;b2,b3,b9=MathUtil.solveCubic(aM[0],aM[1],aM[2],aM[3])bi=b2;be=bi*bi-bj;a0=2*bi-b4;if MathUtil.isZero(be)then be=0 elseif be>0 then be=math.sqrt(be)else return end;if MathUtil.isZero(a0)then a0=0 elseif a0>0 then a0=math.sqrt(a0)else return end;aM[2]=bi-be;aM[1]=b5<0 and-a0 or a0;aM[0]=1;do local bk={MathUtil.solveQuadratic(aM[0],aM[1],aM[2])}ba=#bk;b2,b3=bk[1],bk[2]end;aM[2]=bi+be;aM[1]=b5<0 and a0 or-a0;aM[0]=1;if ba==0 then local bk={MathUtil.solveQuadratic(aM[0],aM[1],aM[2])}ba=ba+#bk;b2,b3=bk[1],bk[2]end;if ba==1 then local bk={MathUtil.solveQuadratic(aM[0],aM[1],aM[2])}ba=ba+#bk;b3,b9=bk[1],bk[2]end;if ba==2 then local bk={MathUtil.solveQuadratic(aM[0],aM[1],aM[2])}ba=ba+#bk;b9,bh=bk[1],bk[2]end end;bb=0.25*a1;if ba>0 then b2=b2-bb end;if ba>1 then b3=b3-bb end;if ba>2 then b9=b9-bb end;if ba>3 then bh=bh-bb end;return b2,b3,b9,bh end;function Matrix3.Matrix3(a_)local bm={}for F=1,9 do bm[F]=a_[F]end;setmetatable(bm,Matrix3.meta)return bm end;function Matrix3.get(bm,bn,bo)return bm[(bn-1)*3+bo]end;function Matrix3.set(bm,bn,bo,C)bm[(bn-1)*3+bo]=C end;function Matrix3.scalarmul(bm,s)local bp={}for F=1,9 do bp[F]=s*bm[F]end;return bp end;function Matrix3.vecmul(bm,bq)local bp=Vector3.zero;for bn=0,2 do local C=0;for bo=1,3 do C=C+bq[Matrix3.vecIdx[bo]]*bm[bn*3+bo]end;bp[Matrix3.vecIdx[bn+1]]=C end end;function Matrix3.matmul(br,bs)local bp={}for F=0,2 do for Y=0,2 do local C=0;for _=0,2 do C=C+br[F*3+_+1]*bs[_*3+Y+1]end;bp[F*3+Y+1]=C end end end;function Matrix3.mul(m,n)if getmetatable(m)~=Matrix3.meta then if m.x then return Matrix3.vecmul(Matrix3.transpose(n),m)end;return Matrix3.mul(n,m)end;if getmetatable(n)==Matrix3.meta then return Matrix3.matmul(m,n)end;if n.x then return Matrix3.vecmul(m,n)end;return Matrix3.scalarmul(m,n)end;function Matrix3.Identity()return{1,0,0,0,1,0,0,0,1}end;function Matrix3.Zero()return{0,0,0,0,0,0,0,0,0}end;function Matrix3.pow(bm,bt)local bu=bm;local bv=bm;while true do bt=math.floor(bt/2)if bt%2==1 then bu=Matrix3.matmul(bm,bv)end;if bt>=2 then bv=Matrix3.matmul(bv,bv)else break end end;return bu end;function Matrix3.add(br,bs)local bp={}for F=1,9 do bp[F]=br[F]+bs[F]end;return bp end;function Matrix3.hadamard(br,bs)local bp={}for F=1,9 do bp[F]=br[F]*bs[F]end;return bp end;function Matrix3.transpose(bm)local bw={}for bn=0,2 do for bo=0,2 do bw[bo*3+bn+1]=bm[bn*3+bo+1]end end;return bw end;function Matrix3.determinant(bm)local bx=0;local by=0;for h=0,2 do for s=0,2 do bx=bx+bm[s*3+(s+h)%3+1]by=by+bm[s*3+(-s+h)%3+1]end end;return bx-by end;function Matrix3.adjugate(bm)local bz={}for bn=0,2 do for bo=0,2 do local bA=0;for F=0,1 do local bB=1;for Y=1,2 do bB=bB*bm[(bn+Y)%3*3+(bo+F+Y)%3+1]end;bA=bA+bB end;bz[bo*3+bn+1]=bA end end;return bz end;function Matrix3.inverse(bm)local bC=Matrix3.determinant(bm)if Stats.isZero(bC)then return end;local bz=Matrix3.cofactors(bm)return bz/bC end;Matrix3.vecIdx={'x','y','z'}Matrix3.meta={__add=Matrix3.add,__mul=Matrix3.mul,__unm=function(bD)return Matrix3.scalarmul(bD,-1)end,__pow=Matrix3.pow}function RingBuffer.RingBuffer(bE)local bF={}bF.buf={}bF.capacity=bE;bF.size=0;bF.head=1;local aX=getmetatable(bF)or{}aX.__index=RingBuffer.get;setmetatable(bF,aX)return bF end;function RingBuffer.isFull(bF)return bF.size>=bF.capacity end;function RingBuffer.push(bF,d)bF.buf[(bF.head+bF.size-1)%bF.capacity+1]=d;if bF.size==bF.capacity then bF.head=bF.head%bF.capacity+1 else bF.size=bF.size+1 end end;function RingBuffer.pop(bF)if bF.size==0 then return nil end;local C=bF.buf[bF.head]bF.buf[bF.head]=nil;bF.head=bF.head%bF.capacity+1;bF.size=bF.size-1;return C end;function RingBuffer.get(bF,p)if type(p)~=\"number\"or math.floor(p)~=p then return nil end;if p<1 or p>bF.size then return nil end;return bF.buf[(bF.head+p-2)%bF.capacity+1]end;function Search.interpolatedSearch(bG,t,u,bH,bI,bJ)bJ=bJ or 50;local m,n,bK;local bL=0;while u>t do m=bG[t]if m==bH then return t end;if m>bH then return bI and t or nil end;n=bG[u]if n==bH then return u end;if n<bH then return bI and u or nil end;bK=math.floor((bH-m)/(n-m)*(u-t)+t)bK=math.min(math.max(bK,t+1),u-1)if bG[bK]==bH then return bK end;if bH<bG[bK]then if bI and math.abs(bG[bK-1]-bH)>math.abs(bG[bK]-bH)then return bK end;u=bK-1 else if bI and math.abs(bG[bK+1]-bH)>math.abs(bG[bK]-bH)then return bK end;t=bK+1 end;bL=bL+1;if bL>bJ then break end end;return bI and t or nil end;function Stats.Distribution(bM)local bN={n=0,vars=bM}if bM then local bO={}local bP={}local bQ=#bM;for F,a0 in ipairs(bM)do bO[a0]=0;for Y=1,bQ do bP[(F-1)*bQ+Y]=0 end end;bN.mean=bO;bN.cov=bP else bN.mean=0;bN.cov=0 end;return bN end;function Stats.updateDistribution(bN,bR,bS)local bT=bN.n;bS=bS or 1;bN.n=bN.n+bS;if bN.vars then local bU={}local bQ=bN.vars and#bN.vars or 1;for F,a0 in ipairs(bN.vars)do bU[F]=bN.mean[a0]local bV=bU[F]+bR[a0]*bS/bN.n;for Y=F,bQ do local ae=bN.vars[Y]local bW=bN.mean[ae]local bX=(bS or 1)*(bR[a0]-bV)*(bR[ae]-bW)bN.cov[(F-1)*bQ+Y]=(bN.cov[(F-1)*bQ+Y]*bT+bX)/bN.n;bN.cov[(Y-1)*bQ+F]=bN.cov[(F-1)*bQ+Y]end;bN.mean[a0]=bV end else local bV=bN.mean+bR*bS/bN.n;bN.cov=(bN.cov*bT+bS*(bR-bV)*(bR-bN.mean))/bN.n;bN.mean=bV end;return bN end;function Stats.updateDistributionBatched(bN,bY,bZ)if#bY==0 then return end;local b_;local bQ=bN.vars and#bN.vars or 1;local c0=0;for Y=1,#bY do c0=c0+(bZ and bZ[Y]or 1)end;bN.n=bN.n+c0;local bT=bN.n;if bN.vars then for F,c1 in ipairs(bN.vars)do local bo={}for Y=1,#bY do bo[Y]=bY[Y][c1]end;b_[F]=bo end;for F,a0 in ipairs(bN.vars)do local c2=0;for Y,s in ipairs(b_[F])do c2=c2+s*(bZ and bZ[Y]or 1)end;local bV=bN.mean[a0]+c2/bN.n;for Y=F,bQ do local bW=bN.mean[bN.vars[Y]]c2=0;for s=1,#bY do c2=c2+(bZ and bZ[s]or 1)*(b_[F][s]-bV)*(b_[Y][s]-bW)end;bN.cov[(F-1)*bQ+Y]=(bN.cov[(F-1)*bQ+Y]*bT+c2)/bN.n;bN.cov[(Y-1)*bQ+F]=bN.cov[(F-1)*bQ+Y]end;bN.mean[a0]=bV end else local c2=0;for F,s in ipairs(bY)do c2=c2+s*(bZ and bZ[F]or 1)end;local bV=bN.mean+c2/bN.n;c2=0;for F,s in ipairs(bY)do c2=c2+(bZ and bZ[F]or 1)*(s-bV)*(s-bN.mean)end;bN.cov=(bN.cov*bT+c2)/bN.n end;return bN end;function Stats.mean(bN)return bN.mean end;function Stats.covariance(bN)return bN.cov end;function Stats.normal()local bi,c3=Stats.boxMuller()return bi end;function Stats.normalPDF(bi)return math.exp(-0.5*bi*bi)/math.sqrt(2*math.pi)end;function Stats.normalCDF(bi)local c4=0.2316419;local c5=0.319381530;local c6=-0.356563782;local c7=1.781477937;local c8=-1.821255978;local c9=1.330274429;local g=1/(1+c4*bi)return 1-Stats.normalPDF(bi)*(c5*g+c6*g^2+c7*g^3+c8*g^4+c9*g^5)end;function Stats.inverseNorm(b4)local ca=b4>=0.5 and b4 or-b4;local bi=5.55556*(1-((1-ca)/ca)^0.1186)if b4<0.5 then bi=-bi end;return bi end;function Stats.boxMuller()local cb=math.random()local cc=math.random()cc=math.random()cc=math.random()local bj=math.sqrt(-2*math.log(cb))local cd=2*math.pi*cc;return bj*math.cos(cd),bj*math.sin(cd)end;VectorN.mt=getmetatable({})or{}VectorN.mt.__add=function(m,n)local ce=type(m)==\"number\"local cf=type(n)==\"number\"if not ce and cf then return n+m end;if ce and not cf then return Stats.combine(m,n,function(_,ao,cg)return m+cg end)else return Stats.combine(m,n,function(_,ao,cg)return ao+cg end)end end;VectorN.mt.__sub=function(m,n)return m+-n end;VectorN.mt.__mul=function(m,n)local ce=type(m)==\"number\"local cf=type(n)==\"number\"if not ce and cf then return n*m end;if ce and not cf then local z={}for _,a0 in pairs(n)do z[_]=m*a0 end;return z else return Stats.combine(m,n,function(_,ao,cg)return ao*cg end)end end;VectorN.mt.__div=function(m,n)local ce=type(m)==\"number\"local cf=type(n)==\"number\"if not ce and cf then return m*1/n end;if ce and not cf then local z={}for _,a0 in pairs(n)do z[_]=m/a0 end;return z else return Stats.combine(m,n,function(_,ao,cg)return ao/cg end)end end;VectorN.mt.__unm=function(m)local z={}for _,a0 in pairs(m)do z[_]=-a0 end;return z end;function VectorN.VectorN(B)local bq={}for _,a0 in pairs(B)do if type(a0)==\"table\"then bq[_]=VectorN.VectorN(a0)else bq[_]=a0 end end;setmetatable(bq,VectorN.mt)return bq end;function Control.PID(ch,ci,cj,ck,cl,cm)local cn={}cn.kP=ch;cn.kI=ci;cn.kD=cj;cn.Iacc=Accumulator.Accumulator(ck,cl)if cm and cm~=0 then cn.period=cm end;return cn end;function Control.processPID(co,cp,e)cp=co.period and(cp+co.period/2)%co.period-co.period/2 or cp;local b4=co.kP*cp;local F,cq=Accumulator.update(co.Iacc,cp,e)F=co.kI*F/cq;local h=co.kD*(cp-(co.lastError or cp))/e;co.lastError=cp;return b4+F+h end;function Control.FF(aM,cm)local cr={}cr.coeffs=aM;cr.degree=#aM-1;if cm and cm~=0 then cr.period=cm end;cr.derivs={}return cr end;function Control.processFF(co,bH,e)local cs=0*bH;local ct=bH;local cu=bH;for F=1,co.degree+1 do cu=co.derivs[F]co.derivs[F]=ct;cs=cs+co.coeffs[F]*ct;if cu then local aD=ct-cu;if F==1 and co.period then aD=(aD+co.period/2)%co.period-co.period/2 end;ct=aD/e else break end end;return cs end;function Nav.toLocal(cv,cw,cx)local cy=cv-cw;return Quaternion.Inverse(cx)*cy end;function Nav.toGlobal(cz,cw,cx)local cy=cx*cz;return cy+cw end;function Nav.cartToPol(cA)local bj=cA.magnitude;local cd=Vector3.SignedAngle(Vector3.forward,cA,Vector3.up)local bf=90-Vector3.Angle(Vector3.up,cA)return Vector3(bj,cd,bf)end;function Nav.cartToCyl(cA)local cB=Vector3(cA.x,0,cA.z)local cC=cB.magnitude;local bf=Vector3.SignedAngle(Vector3.forward,cA,Vector3.up)local bi=cA.y;return Vector3(cC,bf,bi)end;function Nav.polToCart(cA)local bj,cd,bf=cA.x,cA.y,cA.z;local ao=Mathf.Sin(cd)*Mathf.Cos(bf)local cg=Mathf.Sin(bf)local bi=Mathf.Cos(cd)*Mathf.Cos(bf)return bj*Vector3(ao,cg,bi)end;function Nav.cylToCart(cA)local cC,bf,cD=cA.x,cA.y,cA.z;local ao=cC*Mathf.Sin(bf)local cg=cD;local bi=cC*Mathf.Cos(bf)return Vector3(ao,cg,bi)end;function Targeting.firstOrderTargeting(cE,cF,cG)local cH=cE-Vector3.Project(cE,cF)local cI=Vector3.Dot(cF,cE-cH)/cF.sqrMagnitude;local m,n=MathUtil.solveQuadratic(cI-cG*cG,2*cI,cH.sqrMagnitude+cI*cI)local cJ=nil;if m and m>=0 then cJ=m end;if n and n>=0 and n<m then cJ=n end;return cJ and(cE+cJ*cF).normalized or nil end;function Targeting.secondOrderTargeting(cE,cK,cL,cG,cM,cN)local m=-0.25*cL.sqrMagnitude;local n=-Vector3.Dot(cK,cL)local Q=-(cK.sqrMagnitude-cG*cG+Vector3.Dot(cE,cL))local h=-2*Vector3.Dot(cE,cK)local cp=-cE.sqrMagnitude;local g;local cO=cL.magnitude;local cP=cK.magnitude;local cQ=cE.magnitude;local cR,cS=MathUtil.solveQuadratic(0.5*cO,cP+cG,-cQ)local cT=math.max(cR,cS)local cU;local aM={0.5*cO,cP-cG,cQ}if MathUtil.ruleOfSigns(aM,0)==2 then local cV,cW=MathUtil.solveQuadratic(aM[1],aM[2],aM[3])if cV then cU=math.min(cV,cW)end end;if not cU or cU<cT then local b2,b3,b9=MathUtil.solveCubic(4*m,3*n,2*Q,h)if not b9 then if b2>cT then cU=b2 end else local cV=math.min(b2,b9)local cW=math.max(b2,b9)if cV>cT then cU=cV elseif cW>cT then cU=cW end end;if not cU then return end end;local function cX(ao)return cp+ao*(h+ao*(Q+ao*(n+ao*m)))end;g=MathUtil.ITP(cX,cT,cU,1e-4,25)if not g then return end;if g>=cT and g<=cU then local cY=cE+cK*g+0.5*cL*g*g;if cY.magnitude>=cM and cY.magnitude<=cN then return cY,g end end end;function Targeting.AIPPN(cZ,cE,c_,cF,d0)local cK=cF-c_;local d1=Vector3.Dot(-cK,cE.normalized)if d1<=0 then d1=10 end;local d2=cE.magnitude/d1;local d3=Vector3.Cross(cE,cK)/cE.sqrMagnitude;local d4=Vector3.Cross(cE,d0)/cE.sqrMagnitude*d2/2;local d5=d3+d4;local d6=Vector3.Cross(d5,cE.normalized)local d7=Vector3.ProjectOnPlane(d6,c_).normalized;local d8=cZ*c_.magnitude*d5.magnitude;return d8*d7 end;function Targeting.ATPN(cZ,cE,c_,cF,d0)local cK=cF-c_;local d1=-Vector3.Dot(cK,cE.normalized)if d1<=0 then d1=10 end;local d3=Vector3.Cross(cE,cK)/cE.sqrMagnitude;local d6=Vector3.Cross(d3,cE.normalized)local d9=Vector3.ProjectOnPlane(d0,cE)return cZ*d1*d6+0.5*cZ*d0 end;function BlockUtil.getWeaponsByName(da,db,aW,dc)if DEBUG then da:Log(\"searching for \"..db)end;local dd={}aW=aW or-1;local Q=aW;if not dc or dc==0 or dc==2 then for F=0,da:GetWeaponCount()-1 do if Q==0 then break end;if da:GetWeaponBlockInfo(F).CustomName==db then table.insert(dd,{subIdx=nil,wpnIdx=F})if DEBUG then da:Log(\"found weapon \"..db..\" on hull, type \"..da:GetWeaponInfo(F).WeaponType)end;Q=Q-1 end end end;if not dc or dc==1 or dc==2 then local de=da:GetAllSubConstructs()for p=1,#de do local bb=de[p]for F=0,da:GetWeaponCountOnSubConstruct(bb)-1 do if Q==0 then break end;if da:GetWeaponBlockInfoOnSubConstruct(bb,F).CustomName==db then table.insert(dd,{subIdx=bb,wpnIdx=F})if DEBUG then da:Log(\"found weapon \"..db..\" on subobj \"..bb..\", type \"..da:GetWeaponInfoOnSubConstruct(bb,F).WeaponType)end;Q=Q-1 end end end end;if DEBUG then da:Log(\"weapon count: \"..#dd)end;return dd end;function BlockUtil.getSubConstructsByName(da,db,aW)if DEBUG then da:Log(\"searching for \"..db)end;local de=da:GetAllSubConstructs()local df={}aW=aW or-1;local Q=aW;for p=1,#de do local bb=de[p]if Q==0 then break end;if da:GetSubConstructInfo(bb).CustomName==db then table.insert(df,bb)if DEBUG then da:Log(\"found subobj \"..db)end;Q=Q-1 end end;if DEBUG then da:Log(\"subobj count: \"..#df)end;return df end;function BlockUtil.getBlocksByName(da,db,dg,aW)if DEBUG then da:Log(\"searching for \"..db)end;local dh={}aW=aW or-1;local Q=aW;for p=0,da:Component_GetCount(dg)-1 do if Q==0 then break end;if da:Component_GetBlockInfo(dg,p).CustomName==db then table.insert(dh,p)if DEBUG then da:Log(\"found component \"..db)end;Q=Q-1 end end;if DEBUG then da:Log(\"component count: \"..#dh)end;return dh end;function BlockUtil.populateWeaponsByName(da,dc)if DEBUG then da:Log(\"populating all weapons, mode \"..dc)end;local dd={}for p=0,da:GetWeaponCount()-1 do local db=da:Component_GetBlockInfo(type,p).CustomName;if db and db~=''then dd[db]=dd[db]or{}table.insert(dd[db],{subIdx=nil,wpnIdx=p})if DEBUG then da:Log(\"found weapon \"..db..\" on hull, type \"..da:GetWeaponInfo(p).WeaponType)end else table.insert(dd,{subIdx=nil,wpnIdx=p})if DEBUG then da:Log(\"found unnamed weapon on hull, type \"..da:GetWeaponInfo(p).WeaponType)end end end;if not dc or dc==1 or dc==2 then local de=da:GetAllSubConstructs()for p=1,#de do local bb=de[p]for F=0,da:GetWeaponCountOnSubConstruct(bb)-1 do local db=da:Component_GetBlockInfo(type,F).CustomName;if db and db~=''then dd[db]=dd[db]or{}table.insert(dd[db],{subIdx=bb,wpnIdx=F})if DEBUG then da:Log(\"found weapon \"..db..\" on subobj \"..bb..\", type \"..da:GetWeaponInfoOnSubConstruct(bb,F).WeaponType)end else table.insert(dd,{subIdx=bb,wpnIdx=F})if DEBUG then da:Log(\"found unnamed weapon on subobj \"..bb..\", type \"..da:GetWeaponInfoOnSubConstruct(bb,F).WeaponType)end end end end end;if DEBUG then local aW=0;for _,a0 in pairs(dd)do if type(a0)==\"table\"then aW=aW+#a0 else aW=aW+1 end end;da:Log(\"weapon count: \"..aW)end;return dd end;function BlockUtil.populateSubConstructsByName(da)if DEBUG then da:Log(\"populating all subconstructs\")end;local de=da:GetAllSubConstructs()local df={}for p=1,#de do local bb=de[p]local db=da:GetSubConstructInfo(bb).CustomName;if db and db~=''then df[db]=df[db]or{}table.insert(df[db],bb)if DEBUG then da:Log(\"found subobj \"..db)end else table.insert(df,bb)if DEBUG then da:Log(\"found unnamed subobj\")end end end;if DEBUG then local aW=0;for _,a0 in pairs(df)do if type(a0)==\"table\"then aW=aW+#a0 else aW=aW+1 end end;da:Log(\"subobject count: \"..aW)end;return df end;function BlockUtil.populateBlocksByName(da,dg)if DEBUG then da:Log(\"populating all blocks of type \"..dg)end;local dh={}for p=0,da:Component_GetCount(dg)-1 do local db=da:Component_GetBlockInfo(dg,p).CustomName;if db and db~=''then dh[db]=dh[db]or{}table.insert(dh[db],p)if DEBUG then da:Log(\"found component \"..db)end else table.insert(dh,p)if DEBUG then da:Log(\"found unnamed component of type \"..dg)end end end;if DEBUG then local aW=0;for _,a0 in pairs(dh)do if type(a0)==\"table\"then aW=aW+#a0 else aW=aW+1 end end;da:Log(\"component count: \"..aW)end;return dh end;function BlockUtil.getWeaponInfo(da,di)if di.subIdx then return da:GetWeaponInfoOnSubConstruct(di.subIdx,di.wpnIdx)end;return da:GetWeaponInfo(di.wpnIdx)end;function BlockUtil.getWeaponBlockInfo(da,di)if di.subIdx then return da:GetWeaponBlockInfoOnSubConstruct(di.subIdx,di.wpnIdx)end;return da:GetWeaponBlockInfo(di.wpnIdx)end;function BlockUtil.aimWeapon(da,di,dj,dk)if di.subIdx then da:AimWeaponInDirectionOnSubConstruct(di.subIdx,di.wpnIdx,dj.x,dj.y,dj.z,dk)else da:AimWeaponInDirection(di.wpnIdx,dj.x,dj.y,dj.z,dk)end end;function BlockUtil.fireWeapon(da,di,dk)if di.subIdx then return da:FireWeaponOnSubConstruct(di.subIdx,di.wpnIdx,dk)end;return da:FireWeapon(di.wpnIdx,dk)end;function Combat.pickTarget(da,dl,dm)dm=dm or function(U,dn)return dn.Priority end;local bH,dp;for F in MathUtil.range(da:GetNumberOfTargets(dl))do local dn=da:GetTargetInfo(dl,F)local dq=dm(da,dn)if not bH or dq>dp then bH=dn;dp=dq end end;return bH end;function Combat.CheckConstraints(da,dr,ds,dt)local du;if dt then du=da:GetWeaponConstraintsOnSubConstruct(dt,ds)else du=da:GetWeaponConstraints(ds)end;local dv=da:GetConstructForwardVector()local dw=da:GetConstructUpVector()local dx=Quaternion.LookRotation(dv,dw)dr=Quaternion.Inverse(dx)*dr;if du.InParentConstructSpace and dt then local dy=da:GetSubConstructInfo(dt).localRotation;dr=Quaternion.inverse(dy)*dr end;local dz=MathUtil.angleOnPlane(Vector3.forward,dr,Vector3.up)local dA=dr;dA.z=0;local O=Mathf.Atan2(dr.z,dA.magnitude)local dB=dz>du.MinAzimuth and dz<du.MaxAzimuth;local dC=O>du.MinElevation and O<du.MaxElevation;if du.FlipAzimuth then dB=not dB end;if dB and dC then return true end;dz=dz+180;O=180-O;if O>180 then O=O-360 end;if O<-180 then O=O+360 end;dB=dz>du.MinAzimuth and dz<du.MaxAzimuth;dC=O>du.MinElevation and O<du.MaxElevation;if du.FlipAzimuth then dB=not dB end;if dB and dC then return true end;return false end;function StringUtil.LogVector(da,bq,dD)da:Log(dD..\"(\"..bq.x..\", \"..bq.y..\", \"..bq.z..\")\")end\r\n"],"BlockStringDataIds":[227],"GameVersion":"3.6.4.5","PersistentSubObjectIndex":84,"PersistentBlockIndex":301,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"051780ed-f58a-41a6-b60f-84fb260c1b22","ObjectId":"8e7a7c61-60bb-4285-b983-792266e93e0c","CreatorReadableName":"DreekFire","HashV1":"849c218282a388ddfc47f8ab3a3d706d"},"BlockCount":276}}